
LCD 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f44  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000f44  00000fb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ff8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001830  00000000  00000000  00001104  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000716  00000000  00000000  00002934  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b17  00000000  00000000  0000304a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000268  00000000  00000000  00003b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000484  00000000  00000000  00003dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000fd5  00000000  00000000  00004250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00005225  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__divsf3_pse+0x2>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e4 e4       	ldi	r30, 0x44	; 68
  ea:	ff e0       	ldi	r31, 0x0F	; 15
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a0 37       	cpi	r26, 0x70	; 112
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>
  f8:	0e 94 96 03 	call	0x72c	; 0x72c <main>
  fc:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <_exit>

00000100 <__bad_interrupt>:
 100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
 104:	67 2b       	or	r22, r23
 106:	09 f0       	breq	.+2      	; 0x10a <pinChange+0x6>
 108:	9f c0       	rjmp	.+318    	; 0x248 <pinChange+0x144>
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	11 f4       	brne	.+4      	; 0x112 <pinChange+0xe>
 10e:	d8 98       	cbi	0x1b, 0	; 27
 110:	08 95       	ret
 112:	81 30       	cpi	r24, 0x01	; 1
 114:	91 05       	cpc	r25, r1
 116:	11 f4       	brne	.+4      	; 0x11c <pinChange+0x18>
 118:	d9 98       	cbi	0x1b, 1	; 27
 11a:	08 95       	ret
 11c:	82 30       	cpi	r24, 0x02	; 2
 11e:	91 05       	cpc	r25, r1
 120:	11 f4       	brne	.+4      	; 0x126 <pinChange+0x22>
 122:	da 98       	cbi	0x1b, 2	; 27
 124:	08 95       	ret
 126:	83 30       	cpi	r24, 0x03	; 3
 128:	91 05       	cpc	r25, r1
 12a:	11 f4       	brne	.+4      	; 0x130 <pinChange+0x2c>
 12c:	db 98       	cbi	0x1b, 3	; 27
 12e:	08 95       	ret
 130:	84 30       	cpi	r24, 0x04	; 4
 132:	91 05       	cpc	r25, r1
 134:	11 f4       	brne	.+4      	; 0x13a <pinChange+0x36>
 136:	dc 98       	cbi	0x1b, 4	; 27
 138:	08 95       	ret
 13a:	85 30       	cpi	r24, 0x05	; 5
 13c:	91 05       	cpc	r25, r1
 13e:	11 f4       	brne	.+4      	; 0x144 <pinChange+0x40>
 140:	dd 98       	cbi	0x1b, 5	; 27
 142:	08 95       	ret
 144:	86 30       	cpi	r24, 0x06	; 6
 146:	91 05       	cpc	r25, r1
 148:	11 f4       	brne	.+4      	; 0x14e <pinChange+0x4a>
 14a:	de 98       	cbi	0x1b, 6	; 27
 14c:	08 95       	ret
 14e:	87 30       	cpi	r24, 0x07	; 7
 150:	91 05       	cpc	r25, r1
 152:	11 f4       	brne	.+4      	; 0x158 <pinChange+0x54>
 154:	df 98       	cbi	0x1b, 7	; 27
 156:	08 95       	ret
 158:	8a 30       	cpi	r24, 0x0A	; 10
 15a:	91 05       	cpc	r25, r1
 15c:	11 f4       	brne	.+4      	; 0x162 <pinChange+0x5e>
 15e:	c0 98       	cbi	0x18, 0	; 24
 160:	08 95       	ret
 162:	8b 30       	cpi	r24, 0x0B	; 11
 164:	91 05       	cpc	r25, r1
 166:	11 f4       	brne	.+4      	; 0x16c <pinChange+0x68>
 168:	c1 98       	cbi	0x18, 1	; 24
 16a:	08 95       	ret
 16c:	8c 30       	cpi	r24, 0x0C	; 12
 16e:	91 05       	cpc	r25, r1
 170:	11 f4       	brne	.+4      	; 0x176 <pinChange+0x72>
 172:	c2 98       	cbi	0x18, 2	; 24
 174:	08 95       	ret
 176:	8d 30       	cpi	r24, 0x0D	; 13
 178:	91 05       	cpc	r25, r1
 17a:	11 f4       	brne	.+4      	; 0x180 <pinChange+0x7c>
 17c:	c3 98       	cbi	0x18, 3	; 24
 17e:	08 95       	ret
 180:	8e 30       	cpi	r24, 0x0E	; 14
 182:	91 05       	cpc	r25, r1
 184:	11 f4       	brne	.+4      	; 0x18a <pinChange+0x86>
 186:	c4 98       	cbi	0x18, 4	; 24
 188:	08 95       	ret
 18a:	8f 30       	cpi	r24, 0x0F	; 15
 18c:	91 05       	cpc	r25, r1
 18e:	11 f4       	brne	.+4      	; 0x194 <pinChange+0x90>
 190:	c5 98       	cbi	0x18, 5	; 24
 192:	08 95       	ret
 194:	80 31       	cpi	r24, 0x10	; 16
 196:	91 05       	cpc	r25, r1
 198:	11 f4       	brne	.+4      	; 0x19e <pinChange+0x9a>
 19a:	c6 98       	cbi	0x18, 6	; 24
 19c:	08 95       	ret
 19e:	81 31       	cpi	r24, 0x11	; 17
 1a0:	91 05       	cpc	r25, r1
 1a2:	11 f4       	brne	.+4      	; 0x1a8 <pinChange+0xa4>
 1a4:	c7 98       	cbi	0x18, 7	; 24
 1a6:	08 95       	ret
 1a8:	84 31       	cpi	r24, 0x14	; 20
 1aa:	91 05       	cpc	r25, r1
 1ac:	11 f4       	brne	.+4      	; 0x1b2 <pinChange+0xae>
 1ae:	a8 98       	cbi	0x15, 0	; 21
 1b0:	08 95       	ret
 1b2:	85 31       	cpi	r24, 0x15	; 21
 1b4:	91 05       	cpc	r25, r1
 1b6:	11 f4       	brne	.+4      	; 0x1bc <pinChange+0xb8>
 1b8:	a9 98       	cbi	0x15, 1	; 21
 1ba:	08 95       	ret
 1bc:	86 31       	cpi	r24, 0x16	; 22
 1be:	91 05       	cpc	r25, r1
 1c0:	11 f4       	brne	.+4      	; 0x1c6 <pinChange+0xc2>
 1c2:	aa 98       	cbi	0x15, 2	; 21
 1c4:	08 95       	ret
 1c6:	87 31       	cpi	r24, 0x17	; 23
 1c8:	91 05       	cpc	r25, r1
 1ca:	11 f4       	brne	.+4      	; 0x1d0 <pinChange+0xcc>
 1cc:	ab 98       	cbi	0x15, 3	; 21
 1ce:	08 95       	ret
 1d0:	88 31       	cpi	r24, 0x18	; 24
 1d2:	91 05       	cpc	r25, r1
 1d4:	11 f4       	brne	.+4      	; 0x1da <pinChange+0xd6>
 1d6:	ac 98       	cbi	0x15, 4	; 21
 1d8:	08 95       	ret
 1da:	89 31       	cpi	r24, 0x19	; 25
 1dc:	91 05       	cpc	r25, r1
 1de:	11 f4       	brne	.+4      	; 0x1e4 <pinChange+0xe0>
 1e0:	ad 98       	cbi	0x15, 5	; 21
 1e2:	08 95       	ret
 1e4:	8a 31       	cpi	r24, 0x1A	; 26
 1e6:	91 05       	cpc	r25, r1
 1e8:	11 f4       	brne	.+4      	; 0x1ee <pinChange+0xea>
 1ea:	ae 98       	cbi	0x15, 6	; 21
 1ec:	08 95       	ret
 1ee:	8b 31       	cpi	r24, 0x1B	; 27
 1f0:	91 05       	cpc	r25, r1
 1f2:	11 f4       	brne	.+4      	; 0x1f8 <pinChange+0xf4>
 1f4:	af 98       	cbi	0x15, 7	; 21
 1f6:	08 95       	ret
 1f8:	8e 31       	cpi	r24, 0x1E	; 30
 1fa:	91 05       	cpc	r25, r1
 1fc:	11 f4       	brne	.+4      	; 0x202 <pinChange+0xfe>
 1fe:	90 98       	cbi	0x12, 0	; 18
 200:	08 95       	ret
 202:	8f 31       	cpi	r24, 0x1F	; 31
 204:	91 05       	cpc	r25, r1
 206:	11 f4       	brne	.+4      	; 0x20c <pinChange+0x108>
 208:	91 98       	cbi	0x12, 1	; 18
 20a:	08 95       	ret
 20c:	80 32       	cpi	r24, 0x20	; 32
 20e:	91 05       	cpc	r25, r1
 210:	11 f4       	brne	.+4      	; 0x216 <pinChange+0x112>
 212:	92 98       	cbi	0x12, 2	; 18
 214:	08 95       	ret
 216:	81 32       	cpi	r24, 0x21	; 33
 218:	91 05       	cpc	r25, r1
 21a:	11 f4       	brne	.+4      	; 0x220 <pinChange+0x11c>
 21c:	93 98       	cbi	0x12, 3	; 18
 21e:	08 95       	ret
 220:	82 32       	cpi	r24, 0x22	; 34
 222:	91 05       	cpc	r25, r1
 224:	11 f4       	brne	.+4      	; 0x22a <pinChange+0x126>
 226:	94 98       	cbi	0x12, 4	; 18
 228:	08 95       	ret
 22a:	83 32       	cpi	r24, 0x23	; 35
 22c:	91 05       	cpc	r25, r1
 22e:	11 f4       	brne	.+4      	; 0x234 <pinChange+0x130>
 230:	95 98       	cbi	0x12, 5	; 18
 232:	08 95       	ret
 234:	84 32       	cpi	r24, 0x24	; 36
 236:	91 05       	cpc	r25, r1
 238:	11 f4       	brne	.+4      	; 0x23e <pinChange+0x13a>
 23a:	96 98       	cbi	0x12, 6	; 18
 23c:	08 95       	ret
 23e:	85 97       	sbiw	r24, 0x25	; 37
 240:	09 f0       	breq	.+2      	; 0x244 <pinChange+0x140>
 242:	9f c0       	rjmp	.+318    	; 0x382 <pinChange+0x27e>
 244:	97 98       	cbi	0x12, 7	; 18
 246:	08 95       	ret
 248:	00 97       	sbiw	r24, 0x00	; 0
 24a:	11 f4       	brne	.+4      	; 0x250 <pinChange+0x14c>
 24c:	d8 9a       	sbi	0x1b, 0	; 27
 24e:	08 95       	ret
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	91 05       	cpc	r25, r1
 254:	11 f4       	brne	.+4      	; 0x25a <pinChange+0x156>
 256:	d9 9a       	sbi	0x1b, 1	; 27
 258:	08 95       	ret
 25a:	82 30       	cpi	r24, 0x02	; 2
 25c:	91 05       	cpc	r25, r1
 25e:	11 f4       	brne	.+4      	; 0x264 <pinChange+0x160>
 260:	da 9a       	sbi	0x1b, 2	; 27
 262:	08 95       	ret
 264:	83 30       	cpi	r24, 0x03	; 3
 266:	91 05       	cpc	r25, r1
 268:	11 f4       	brne	.+4      	; 0x26e <pinChange+0x16a>
 26a:	db 9a       	sbi	0x1b, 3	; 27
 26c:	08 95       	ret
 26e:	84 30       	cpi	r24, 0x04	; 4
 270:	91 05       	cpc	r25, r1
 272:	11 f4       	brne	.+4      	; 0x278 <pinChange+0x174>
 274:	dc 9a       	sbi	0x1b, 4	; 27
 276:	08 95       	ret
 278:	85 30       	cpi	r24, 0x05	; 5
 27a:	91 05       	cpc	r25, r1
 27c:	11 f4       	brne	.+4      	; 0x282 <pinChange+0x17e>
 27e:	dd 9a       	sbi	0x1b, 5	; 27
 280:	08 95       	ret
 282:	86 30       	cpi	r24, 0x06	; 6
 284:	91 05       	cpc	r25, r1
 286:	11 f4       	brne	.+4      	; 0x28c <pinChange+0x188>
 288:	de 9a       	sbi	0x1b, 6	; 27
 28a:	08 95       	ret
 28c:	87 30       	cpi	r24, 0x07	; 7
 28e:	91 05       	cpc	r25, r1
 290:	11 f4       	brne	.+4      	; 0x296 <pinChange+0x192>
 292:	df 9a       	sbi	0x1b, 7	; 27
 294:	08 95       	ret
 296:	8a 30       	cpi	r24, 0x0A	; 10
 298:	91 05       	cpc	r25, r1
 29a:	11 f4       	brne	.+4      	; 0x2a0 <pinChange+0x19c>
 29c:	c0 9a       	sbi	0x18, 0	; 24
 29e:	08 95       	ret
 2a0:	8b 30       	cpi	r24, 0x0B	; 11
 2a2:	91 05       	cpc	r25, r1
 2a4:	11 f4       	brne	.+4      	; 0x2aa <pinChange+0x1a6>
 2a6:	c1 9a       	sbi	0x18, 1	; 24
 2a8:	08 95       	ret
 2aa:	8c 30       	cpi	r24, 0x0C	; 12
 2ac:	91 05       	cpc	r25, r1
 2ae:	11 f4       	brne	.+4      	; 0x2b4 <pinChange+0x1b0>
 2b0:	c2 9a       	sbi	0x18, 2	; 24
 2b2:	08 95       	ret
 2b4:	8d 30       	cpi	r24, 0x0D	; 13
 2b6:	91 05       	cpc	r25, r1
 2b8:	11 f4       	brne	.+4      	; 0x2be <pinChange+0x1ba>
 2ba:	c3 9a       	sbi	0x18, 3	; 24
 2bc:	08 95       	ret
 2be:	8e 30       	cpi	r24, 0x0E	; 14
 2c0:	91 05       	cpc	r25, r1
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <pinChange+0x1c4>
 2c4:	c4 9a       	sbi	0x18, 4	; 24
 2c6:	08 95       	ret
 2c8:	8f 30       	cpi	r24, 0x0F	; 15
 2ca:	91 05       	cpc	r25, r1
 2cc:	11 f4       	brne	.+4      	; 0x2d2 <pinChange+0x1ce>
 2ce:	c5 9a       	sbi	0x18, 5	; 24
 2d0:	08 95       	ret
 2d2:	80 31       	cpi	r24, 0x10	; 16
 2d4:	91 05       	cpc	r25, r1
 2d6:	11 f4       	brne	.+4      	; 0x2dc <pinChange+0x1d8>
 2d8:	c6 9a       	sbi	0x18, 6	; 24
 2da:	08 95       	ret
 2dc:	81 31       	cpi	r24, 0x11	; 17
 2de:	91 05       	cpc	r25, r1
 2e0:	11 f4       	brne	.+4      	; 0x2e6 <pinChange+0x1e2>
 2e2:	c7 9a       	sbi	0x18, 7	; 24
 2e4:	08 95       	ret
 2e6:	84 31       	cpi	r24, 0x14	; 20
 2e8:	91 05       	cpc	r25, r1
 2ea:	11 f4       	brne	.+4      	; 0x2f0 <pinChange+0x1ec>
 2ec:	a8 9a       	sbi	0x15, 0	; 21
 2ee:	08 95       	ret
 2f0:	85 31       	cpi	r24, 0x15	; 21
 2f2:	91 05       	cpc	r25, r1
 2f4:	11 f4       	brne	.+4      	; 0x2fa <pinChange+0x1f6>
 2f6:	a9 9a       	sbi	0x15, 1	; 21
 2f8:	08 95       	ret
 2fa:	86 31       	cpi	r24, 0x16	; 22
 2fc:	91 05       	cpc	r25, r1
 2fe:	11 f4       	brne	.+4      	; 0x304 <pinChange+0x200>
 300:	aa 9a       	sbi	0x15, 2	; 21
 302:	08 95       	ret
 304:	87 31       	cpi	r24, 0x17	; 23
 306:	91 05       	cpc	r25, r1
 308:	11 f4       	brne	.+4      	; 0x30e <pinChange+0x20a>
 30a:	ab 9a       	sbi	0x15, 3	; 21
 30c:	08 95       	ret
 30e:	88 31       	cpi	r24, 0x18	; 24
 310:	91 05       	cpc	r25, r1
 312:	11 f4       	brne	.+4      	; 0x318 <pinChange+0x214>
 314:	ac 9a       	sbi	0x15, 4	; 21
 316:	08 95       	ret
 318:	89 31       	cpi	r24, 0x19	; 25
 31a:	91 05       	cpc	r25, r1
 31c:	11 f4       	brne	.+4      	; 0x322 <pinChange+0x21e>
 31e:	ad 9a       	sbi	0x15, 5	; 21
 320:	08 95       	ret
 322:	8a 31       	cpi	r24, 0x1A	; 26
 324:	91 05       	cpc	r25, r1
 326:	11 f4       	brne	.+4      	; 0x32c <pinChange+0x228>
 328:	ae 9a       	sbi	0x15, 6	; 21
 32a:	08 95       	ret
 32c:	8b 31       	cpi	r24, 0x1B	; 27
 32e:	91 05       	cpc	r25, r1
 330:	11 f4       	brne	.+4      	; 0x336 <pinChange+0x232>
 332:	af 9a       	sbi	0x15, 7	; 21
 334:	08 95       	ret
 336:	8e 31       	cpi	r24, 0x1E	; 30
 338:	91 05       	cpc	r25, r1
 33a:	11 f4       	brne	.+4      	; 0x340 <pinChange+0x23c>
 33c:	90 9a       	sbi	0x12, 0	; 18
 33e:	08 95       	ret
 340:	8f 31       	cpi	r24, 0x1F	; 31
 342:	91 05       	cpc	r25, r1
 344:	11 f4       	brne	.+4      	; 0x34a <pinChange+0x246>
 346:	91 9a       	sbi	0x12, 1	; 18
 348:	08 95       	ret
 34a:	80 32       	cpi	r24, 0x20	; 32
 34c:	91 05       	cpc	r25, r1
 34e:	11 f4       	brne	.+4      	; 0x354 <pinChange+0x250>
 350:	92 9a       	sbi	0x12, 2	; 18
 352:	08 95       	ret
 354:	81 32       	cpi	r24, 0x21	; 33
 356:	91 05       	cpc	r25, r1
 358:	11 f4       	brne	.+4      	; 0x35e <pinChange+0x25a>
 35a:	93 9a       	sbi	0x12, 3	; 18
 35c:	08 95       	ret
 35e:	82 32       	cpi	r24, 0x22	; 34
 360:	91 05       	cpc	r25, r1
 362:	11 f4       	brne	.+4      	; 0x368 <pinChange+0x264>
 364:	94 9a       	sbi	0x12, 4	; 18
 366:	08 95       	ret
 368:	83 32       	cpi	r24, 0x23	; 35
 36a:	91 05       	cpc	r25, r1
 36c:	11 f4       	brne	.+4      	; 0x372 <pinChange+0x26e>
 36e:	95 9a       	sbi	0x12, 5	; 18
 370:	08 95       	ret
 372:	84 32       	cpi	r24, 0x24	; 36
 374:	91 05       	cpc	r25, r1
 376:	11 f4       	brne	.+4      	; 0x37c <pinChange+0x278>
 378:	96 9a       	sbi	0x12, 6	; 18
 37a:	08 95       	ret
 37c:	85 97       	sbiw	r24, 0x25	; 37
 37e:	09 f4       	brne	.+2      	; 0x382 <pinChange+0x27e>
 380:	97 9a       	sbi	0x12, 7	; 18
 382:	08 95       	ret

00000384 <Lcd4_Port>:
 384:	cf 93       	push	r28
 386:	c8 2f       	mov	r28, r24
 388:	80 ff       	sbrs	r24, 0
 38a:	07 c0       	rjmp	.+14     	; 0x39a <Lcd4_Port+0x16>
 38c:	61 e0       	ldi	r22, 0x01	; 1
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	82 e2       	ldi	r24, 0x22	; 34
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 398:	06 c0       	rjmp	.+12     	; 0x3a6 <Lcd4_Port+0x22>
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	82 e2       	ldi	r24, 0x22	; 34
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3a6:	c1 ff       	sbrs	r28, 1
 3a8:	07 c0       	rjmp	.+14     	; 0x3b8 <Lcd4_Port+0x34>
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	70 e0       	ldi	r23, 0x00	; 0
 3ae:	83 e2       	ldi	r24, 0x23	; 35
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3b6:	06 c0       	rjmp	.+12     	; 0x3c4 <Lcd4_Port+0x40>
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	83 e2       	ldi	r24, 0x23	; 35
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3c4:	c2 ff       	sbrs	r28, 2
 3c6:	07 c0       	rjmp	.+14     	; 0x3d6 <Lcd4_Port+0x52>
 3c8:	61 e0       	ldi	r22, 0x01	; 1
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	84 e2       	ldi	r24, 0x24	; 36
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3d4:	06 c0       	rjmp	.+12     	; 0x3e2 <Lcd4_Port+0x5e>
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	84 e2       	ldi	r24, 0x24	; 36
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3e2:	c3 ff       	sbrs	r28, 3
 3e4:	07 c0       	rjmp	.+14     	; 0x3f4 <Lcd4_Port+0x70>
 3e6:	61 e0       	ldi	r22, 0x01	; 1
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	85 e2       	ldi	r24, 0x25	; 37
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 3f2:	06 c0       	rjmp	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	85 e2       	ldi	r24, 0x25	; 37
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 400:	cf 91       	pop	r28
 402:	08 95       	ret

00000404 <Lcd4_Cmd>:
 404:	cf 93       	push	r28
 406:	c8 2f       	mov	r28, r24
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	8a e1       	ldi	r24, 0x1A	; 26
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 414:	8c 2f       	mov	r24, r28
 416:	0e 94 c2 01 	call	0x384	; 0x384 <Lcd4_Port>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	70 e0       	ldi	r23, 0x00	; 0
 41e:	8b e1       	ldi	r24, 0x1B	; 27
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 426:	8f e9       	ldi	r24, 0x9F	; 159
 428:	9f e0       	ldi	r25, 0x0F	; 15
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <Lcd4_Cmd+0x26>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <Lcd4_Cmd+0x2c>
 430:	00 00       	nop
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	8b e1       	ldi	r24, 0x1B	; 27
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 43e:	8f e9       	ldi	r24, 0x9F	; 159
 440:	9f e0       	ldi	r25, 0x0F	; 15
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <Lcd4_Cmd+0x3e>
 446:	00 c0       	rjmp	.+0      	; 0x448 <Lcd4_Cmd+0x44>
 448:	00 00       	nop
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <Lcd4_Clear>:
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 45a:	08 95       	ret

0000045c <Lcd4_Set_Cursor>:
 45c:	cf 93       	push	r28
 45e:	c6 2f       	mov	r28, r22
 460:	81 30       	cpi	r24, 0x01	; 1
 462:	59 f4       	brne	.+22     	; 0x47a <Lcd4_Set_Cursor+0x1e>
 464:	80 e8       	ldi	r24, 0x80	; 128
 466:	86 0f       	add	r24, r22
 468:	82 95       	swap	r24
 46a:	8f 70       	andi	r24, 0x0F	; 15
 46c:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 470:	8c 2f       	mov	r24, r28
 472:	8f 70       	andi	r24, 0x0F	; 15
 474:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 478:	0c c0       	rjmp	.+24     	; 0x492 <Lcd4_Set_Cursor+0x36>
 47a:	82 30       	cpi	r24, 0x02	; 2
 47c:	51 f4       	brne	.+20     	; 0x492 <Lcd4_Set_Cursor+0x36>
 47e:	80 ec       	ldi	r24, 0xC0	; 192
 480:	86 0f       	add	r24, r22
 482:	82 95       	swap	r24
 484:	8f 70       	andi	r24, 0x0F	; 15
 486:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 48a:	8c 2f       	mov	r24, r28
 48c:	8f 70       	andi	r24, 0x0F	; 15
 48e:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 492:	cf 91       	pop	r28
 494:	08 95       	ret

00000496 <Lcd4_Init>:
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	0e 94 c2 01 	call	0x384	; 0x384 <Lcd4_Port>
 49c:	2f ef       	ldi	r18, 0xFF	; 255
 49e:	89 ef       	ldi	r24, 0xF9	; 249
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	21 50       	subi	r18, 0x01	; 1
 4a4:	80 40       	sbci	r24, 0x00	; 0
 4a6:	90 40       	sbci	r25, 0x00	; 0
 4a8:	e1 f7       	brne	.-8      	; 0x4a2 <Lcd4_Init+0xc>
 4aa:	00 c0       	rjmp	.+0      	; 0x4ac <Lcd4_Init+0x16>
 4ac:	00 00       	nop
 4ae:	83 e0       	ldi	r24, 0x03	; 3
 4b0:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4b4:	8f e1       	ldi	r24, 0x1F	; 31
 4b6:	9e e4       	ldi	r25, 0x4E	; 78
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <Lcd4_Init+0x22>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <Lcd4_Init+0x28>
 4be:	00 00       	nop
 4c0:	83 e0       	ldi	r24, 0x03	; 3
 4c2:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4c6:	8f ed       	ldi	r24, 0xDF	; 223
 4c8:	9b ea       	ldi	r25, 0xAB	; 171
 4ca:	01 97       	sbiw	r24, 0x01	; 1
 4cc:	f1 f7       	brne	.-4      	; 0x4ca <Lcd4_Init+0x34>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <Lcd4_Init+0x3a>
 4d0:	00 00       	nop
 4d2:	83 e0       	ldi	r24, 0x03	; 3
 4d4:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4d8:	82 e0       	ldi	r24, 0x02	; 2
 4da:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4e4:	88 e0       	ldi	r24, 0x08	; 8
 4e6:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4f0:	8c e0       	ldi	r24, 0x0C	; 12
 4f2:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4f6:	80 e0       	ldi	r24, 0x00	; 0
 4f8:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 4fc:	86 e0       	ldi	r24, 0x06	; 6
 4fe:	0e 94 02 02 	call	0x404	; 0x404 <Lcd4_Cmd>
 502:	08 95       	ret

00000504 <Lcd4_Write_Char>:
 504:	cf 93       	push	r28
 506:	c8 2f       	mov	r28, r24
 508:	61 e0       	ldi	r22, 0x01	; 1
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	8a e1       	ldi	r24, 0x1A	; 26
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 514:	8c 2f       	mov	r24, r28
 516:	82 95       	swap	r24
 518:	8f 70       	andi	r24, 0x0F	; 15
 51a:	0e 94 c2 01 	call	0x384	; 0x384 <Lcd4_Port>
 51e:	61 e0       	ldi	r22, 0x01	; 1
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	8b e1       	ldi	r24, 0x1B	; 27
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 52a:	8f e9       	ldi	r24, 0x9F	; 159
 52c:	9f e0       	ldi	r25, 0x0F	; 15
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	f1 f7       	brne	.-4      	; 0x52e <Lcd4_Write_Char+0x2a>
 532:	00 c0       	rjmp	.+0      	; 0x534 <Lcd4_Write_Char+0x30>
 534:	00 00       	nop
 536:	60 e0       	ldi	r22, 0x00	; 0
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	8b e1       	ldi	r24, 0x1B	; 27
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 542:	8f e9       	ldi	r24, 0x9F	; 159
 544:	9f e0       	ldi	r25, 0x0F	; 15
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <Lcd4_Write_Char+0x42>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <Lcd4_Write_Char+0x48>
 54c:	00 00       	nop
 54e:	8c 2f       	mov	r24, r28
 550:	8f 70       	andi	r24, 0x0F	; 15
 552:	0e 94 c2 01 	call	0x384	; 0x384 <Lcd4_Port>
 556:	61 e0       	ldi	r22, 0x01	; 1
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	8b e1       	ldi	r24, 0x1B	; 27
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 562:	8f e9       	ldi	r24, 0x9F	; 159
 564:	9f e0       	ldi	r25, 0x0F	; 15
 566:	01 97       	sbiw	r24, 0x01	; 1
 568:	f1 f7       	brne	.-4      	; 0x566 <Lcd4_Write_Char+0x62>
 56a:	00 c0       	rjmp	.+0      	; 0x56c <Lcd4_Write_Char+0x68>
 56c:	00 00       	nop
 56e:	60 e0       	ldi	r22, 0x00	; 0
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	8b e1       	ldi	r24, 0x1B	; 27
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 82 00 	call	0x104	; 0x104 <pinChange>
 57a:	8f e9       	ldi	r24, 0x9F	; 159
 57c:	9f e0       	ldi	r25, 0x0F	; 15
 57e:	01 97       	sbiw	r24, 0x01	; 1
 580:	f1 f7       	brne	.-4      	; 0x57e <Lcd4_Write_Char+0x7a>
 582:	00 c0       	rjmp	.+0      	; 0x584 <Lcd4_Write_Char+0x80>
 584:	00 00       	nop
 586:	cf 91       	pop	r28
 588:	08 95       	ret

0000058a <Lcd4_Write_String>:
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	ec 01       	movw	r28, r24
 590:	88 81       	ld	r24, Y
 592:	88 23       	and	r24, r24
 594:	31 f0       	breq	.+12     	; 0x5a2 <Lcd4_Write_String+0x18>
 596:	21 96       	adiw	r28, 0x01	; 1
 598:	0e 94 82 02 	call	0x504	; 0x504 <Lcd4_Write_Char>
 59c:	89 91       	ld	r24, Y+
 59e:	81 11       	cpse	r24, r1
 5a0:	fb cf       	rjmp	.-10     	; 0x598 <Lcd4_Write_String+0xe>
 5a2:	df 91       	pop	r29
 5a4:	cf 91       	pop	r28
 5a6:	08 95       	ret

000005a8 <reverse>:
#include <math.h>

// reverses a string 'str' of length 'len'
void reverse(char *str, int len)
{
	int i=0, j=len-1, temp;
 5a8:	9b 01       	movw	r18, r22
 5aa:	21 50       	subi	r18, 0x01	; 1
 5ac:	31 09       	sbc	r19, r1
	while (i<j)
 5ae:	12 16       	cp	r1, r18
 5b0:	13 06       	cpc	r1, r19
 5b2:	84 f4       	brge	.+32     	; 0x5d4 <reverse+0x2c>
 5b4:	fc 01       	movw	r30, r24
 5b6:	e6 0f       	add	r30, r22
 5b8:	f7 1f       	adc	r31, r23
 5ba:	dc 01       	movw	r26, r24
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	90 e0       	ldi	r25, 0x00	; 0
	{
		temp = str[i];
 5c0:	4c 91       	ld	r20, X
		str[i] = str[j];
 5c2:	52 91       	ld	r21, -Z
 5c4:	5d 93       	st	X+, r21
		str[j] = temp;
 5c6:	40 83       	st	Z, r20
		i++; j--;
 5c8:	01 96       	adiw	r24, 0x01	; 1
 5ca:	21 50       	subi	r18, 0x01	; 1
 5cc:	31 09       	sbc	r19, r1

// reverses a string 'str' of length 'len'
void reverse(char *str, int len)
{
	int i=0, j=len-1, temp;
	while (i<j)
 5ce:	82 17       	cp	r24, r18
 5d0:	93 07       	cpc	r25, r19
 5d2:	b4 f3       	brlt	.-20     	; 0x5c0 <reverse+0x18>
 5d4:	08 95       	ret

000005d6 <intToStr>:

// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
 5d6:	cf 92       	push	r12
 5d8:	df 92       	push	r13
 5da:	ef 92       	push	r14
 5dc:	ff 92       	push	r15
 5de:	0f 93       	push	r16
 5e0:	1f 93       	push	r17
 5e2:	cf 93       	push	r28
 5e4:	df 93       	push	r29
 5e6:	6b 01       	movw	r12, r22
 5e8:	8a 01       	movw	r16, r20
	int i = 0;
	while (x)
 5ea:	00 97       	sbiw	r24, 0x00	; 0
 5ec:	99 f0       	breq	.+38     	; 0x614 <intToStr+0x3e>
 5ee:	eb 01       	movw	r28, r22
 5f0:	e0 e0       	ldi	r30, 0x00	; 0
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
	{
		str[i++] = (x%10) + '0';
 5f4:	0f 2e       	mov	r0, r31
 5f6:	fa e0       	ldi	r31, 0x0A	; 10
 5f8:	ef 2e       	mov	r14, r31
 5fa:	f1 2c       	mov	r15, r1
 5fc:	f0 2d       	mov	r31, r0
 5fe:	31 96       	adiw	r30, 0x01	; 1
 600:	b7 01       	movw	r22, r14
 602:	0e 94 78 07 	call	0xef0	; 0xef0 <__divmodhi4>
 606:	80 5d       	subi	r24, 0xD0	; 208
 608:	89 93       	st	Y+, r24
		x = x/10;
 60a:	86 2f       	mov	r24, r22
 60c:	97 2f       	mov	r25, r23
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
	int i = 0;
	while (x)
 60e:	00 97       	sbiw	r24, 0x00	; 0
 610:	b1 f7       	brne	.-20     	; 0x5fe <intToStr+0x28>
 612:	02 c0       	rjmp	.+4      	; 0x618 <intToStr+0x42>
// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
	int i = 0;
 614:	e0 e0       	ldi	r30, 0x00	; 0
 616:	f0 e0       	ldi	r31, 0x00	; 0
		x = x/10;
	}
	
	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
 618:	e0 17       	cp	r30, r16
 61a:	f1 07       	cpc	r31, r17
 61c:	5c f4       	brge	.+22     	; 0x634 <intToStr+0x5e>
 61e:	ec 0d       	add	r30, r12
 620:	fd 1d       	adc	r31, r13
 622:	96 01       	movw	r18, r12
 624:	20 0f       	add	r18, r16
 626:	31 1f       	adc	r19, r17
	str[i++] = '0';
 628:	80 e3       	ldi	r24, 0x30	; 48
 62a:	81 93       	st	Z+, r24
		x = x/10;
	}
	
	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
 62c:	e2 17       	cp	r30, r18
 62e:	f3 07       	cpc	r31, r19
 630:	e1 f7       	brne	.-8      	; 0x62a <intToStr+0x54>
 632:	01 c0       	rjmp	.+2      	; 0x636 <intToStr+0x60>
 634:	8f 01       	movw	r16, r30
	str[i++] = '0';
	
	reverse(str, i);
 636:	b8 01       	movw	r22, r16
 638:	c6 01       	movw	r24, r12
 63a:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <reverse>
	str[i] = '\0';
 63e:	e6 01       	movw	r28, r12
 640:	c0 0f       	add	r28, r16
 642:	d1 1f       	adc	r29, r17
 644:	18 82       	st	Y, r1
	return i;
}
 646:	c8 01       	movw	r24, r16
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	1f 91       	pop	r17
 64e:	0f 91       	pop	r16
 650:	ff 90       	pop	r15
 652:	ef 90       	pop	r14
 654:	df 90       	pop	r13
 656:	cf 90       	pop	r12
 658:	08 95       	ret

0000065a <ftoa>:

// Converts a floating point number to string.
void ftoa(float n, char *res, int afterpoint)
{
 65a:	2f 92       	push	r2
 65c:	3f 92       	push	r3
 65e:	4f 92       	push	r4
 660:	5f 92       	push	r5
 662:	6f 92       	push	r6
 664:	7f 92       	push	r7
 666:	8f 92       	push	r8
 668:	9f 92       	push	r9
 66a:	af 92       	push	r10
 66c:	bf 92       	push	r11
 66e:	cf 92       	push	r12
 670:	df 92       	push	r13
 672:	ef 92       	push	r14
 674:	ff 92       	push	r15
 676:	0f 93       	push	r16
 678:	1f 93       	push	r17
 67a:	cf 93       	push	r28
 67c:	df 93       	push	r29
 67e:	4b 01       	movw	r8, r22
 680:	5c 01       	movw	r10, r24
 682:	8a 01       	movw	r16, r20
 684:	e9 01       	movw	r28, r18
	// Extract integer part
	int ipart = (int)n;
 686:	0e 94 c2 04 	call	0x984	; 0x984 <__fixsfsi>
 68a:	6b 01       	movw	r12, r22
 68c:	7c 01       	movw	r14, r24
	
	// Extract floating part
	float fpart = n - (float)ipart;
	
	// convert integer part to string
	int i = intToStr(ipart, res, 0);
 68e:	40 e0       	ldi	r20, 0x00	; 0
 690:	50 e0       	ldi	r21, 0x00	; 0
 692:	b8 01       	movw	r22, r16
 694:	c6 01       	movw	r24, r12
 696:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <intToStr>
 69a:	1c 01       	movw	r2, r24
	
	// check for display option after point
	if (afterpoint != 0)
 69c:	20 97       	sbiw	r28, 0x00	; 0
 69e:	99 f1       	breq	.+102    	; 0x706 <ftoa+0xac>
	{
		res[i] = '.';  // add dot
 6a0:	f8 01       	movw	r30, r16
 6a2:	e8 0f       	add	r30, r24
 6a4:	f9 1f       	adc	r31, r25
 6a6:	8e e2       	ldi	r24, 0x2E	; 46
 6a8:	80 83       	st	Z, r24
		
		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter is needed
		// to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
 6aa:	be 01       	movw	r22, r28
 6ac:	0d 2e       	mov	r0, r29
 6ae:	00 0c       	add	r0, r0
 6b0:	88 0b       	sbc	r24, r24
 6b2:	99 0b       	sbc	r25, r25
 6b4:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__floatsisf>
 6b8:	9b 01       	movw	r18, r22
 6ba:	ac 01       	movw	r20, r24
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	91 e4       	ldi	r25, 0x41	; 65
 6c4:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <pow>
 6c8:	2b 01       	movw	r4, r22
 6ca:	3c 01       	movw	r6, r24
{
	// Extract integer part
	int ipart = (int)n;
	
	// Extract floating part
	float fpart = n - (float)ipart;
 6cc:	b6 01       	movw	r22, r12
 6ce:	dd 0c       	add	r13, r13
 6d0:	88 0b       	sbc	r24, r24
 6d2:	99 0b       	sbc	r25, r25
 6d4:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__floatsisf>
 6d8:	9b 01       	movw	r18, r22
 6da:	ac 01       	movw	r20, r24
 6dc:	c5 01       	movw	r24, r10
 6de:	b4 01       	movw	r22, r8
 6e0:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__subsf3>
		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter is needed
		// to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
		
		intToStr((int)fpart, res + i + 1, afterpoint);
 6e4:	2f ef       	ldi	r18, 0xFF	; 255
 6e6:	22 1a       	sub	r2, r18
 6e8:	32 0a       	sbc	r3, r18
 6ea:	02 0d       	add	r16, r2
 6ec:	13 1d       	adc	r17, r3
 6ee:	a3 01       	movw	r20, r6
 6f0:	92 01       	movw	r18, r4
 6f2:	0e 94 86 05 	call	0xb0c	; 0xb0c <__mulsf3>
 6f6:	0e 94 c2 04 	call	0x984	; 0x984 <__fixsfsi>
 6fa:	dc 01       	movw	r26, r24
 6fc:	cb 01       	movw	r24, r22
 6fe:	ae 01       	movw	r20, r28
 700:	b8 01       	movw	r22, r16
 702:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <intToStr>
	}
}
 706:	df 91       	pop	r29
 708:	cf 91       	pop	r28
 70a:	1f 91       	pop	r17
 70c:	0f 91       	pop	r16
 70e:	ff 90       	pop	r15
 710:	ef 90       	pop	r14
 712:	df 90       	pop	r13
 714:	cf 90       	pop	r12
 716:	bf 90       	pop	r11
 718:	af 90       	pop	r10
 71a:	9f 90       	pop	r9
 71c:	8f 90       	pop	r8
 71e:	7f 90       	pop	r7
 720:	6f 90       	pop	r6
 722:	5f 90       	pop	r5
 724:	4f 90       	pop	r4
 726:	3f 90       	pop	r3
 728:	2f 90       	pop	r2
 72a:	08 95       	ret

0000072c <main>:


int main(void)
{
 72c:	cf 93       	push	r28
 72e:	df 93       	push	r29
 730:	cd b7       	in	r28, 0x3d	; 61
 732:	de b7       	in	r29, 0x3e	; 62
 734:	2f 97       	sbiw	r28, 0x0f	; 15
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	f8 94       	cli
 73a:	de bf       	out	0x3e, r29	; 62
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	cd bf       	out	0x3d, r28	; 61
	DDRD = 0xFF;
 740:	8f ef       	ldi	r24, 0xFF	; 255
 742:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 744:	84 bb       	out	0x14, r24	; 20
	
	ADMUX	= 0b01100000; // AVCC-LeftRes-ADC0
 746:	80 e6       	ldi	r24, 0x60	; 96
 748:	87 b9       	out	0x07, r24	; 7
	ADCSRA	= 0b10000001; // EN-NOT_START-DIS_AUTO_TRIG-INT_FLG_0-INT_EN_0-PreScaler2
 74a:	81 e8       	ldi	r24, 0x81	; 129
 74c:	86 b9       	out	0x06, r24	; 6
	uint16_t value = 0;
	float result=0.0;
	
	Lcd4_Init();
 74e:	0e 94 4b 02 	call	0x496	; 0x496 <Lcd4_Init>
	
	
	while(1)
	{
		ADCSRA |= (1<<ADSC);// start conversion
 752:	36 9a       	sbi	0x06, 6	; 6
		while(ADCSRA&(1<<ADSC)); // wait until finished
 754:	36 99       	sbic	0x06, 6	; 6
 756:	fe cf       	rjmp	.-4      	; 0x754 <main+0x28>
		value = ADCH;//(ADCH<<2)|(ADCL>>6);
 758:	15 b1       	in	r17, 0x05	; 5
		result = 5*value/255.0;//Ignoring <= 24.4mv
		
		Lcd4_Clear();
 75a:	0e 94 27 02 	call	0x44e	; 0x44e <Lcd4_Clear>

		char num[15];
		//itoa(result,num,10);

		//sprintf(num, "%lf", result);
		ftoa(result,num,3);
 75e:	81 2f       	mov	r24, r17
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	bc 01       	movw	r22, r24
 764:	66 0f       	add	r22, r22
 766:	77 1f       	adc	r23, r23
 768:	66 0f       	add	r22, r22
 76a:	77 1f       	adc	r23, r23
 76c:	68 0f       	add	r22, r24
 76e:	79 1f       	adc	r23, r25
 770:	80 e0       	ldi	r24, 0x00	; 0
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__floatunsisf>
 778:	20 e0       	ldi	r18, 0x00	; 0
 77a:	30 e0       	ldi	r19, 0x00	; 0
 77c:	4f e7       	ldi	r20, 0x7F	; 127
 77e:	53 e4       	ldi	r21, 0x43	; 67
 780:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__divsf3>
 784:	23 e0       	ldi	r18, 0x03	; 3
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	ae 01       	movw	r20, r28
 78a:	4f 5f       	subi	r20, 0xFF	; 255
 78c:	5f 4f       	sbci	r21, 0xFF	; 255
 78e:	0e 94 2d 03 	call	0x65a	; 0x65a <ftoa>
		
		Lcd4_Set_Cursor(1,0);
 792:	60 e0       	ldi	r22, 0x00	; 0
 794:	81 e0       	ldi	r24, 0x01	; 1
 796:	0e 94 2e 02 	call	0x45c	; 0x45c <Lcd4_Set_Cursor>
		Lcd4_Write_String("Voltage Value: ");
 79a:	80 e6       	ldi	r24, 0x60	; 96
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	0e 94 c5 02 	call	0x58a	; 0x58a <Lcd4_Write_String>
		Lcd4_Set_Cursor(2,0);
 7a2:	60 e0       	ldi	r22, 0x00	; 0
 7a4:	82 e0       	ldi	r24, 0x02	; 2
 7a6:	0e 94 2e 02 	call	0x45c	; 0x45c <Lcd4_Set_Cursor>
		Lcd4_Write_String(num);
 7aa:	ce 01       	movw	r24, r28
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	0e 94 c5 02 	call	0x58a	; 0x58a <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7b2:	2f ef       	ldi	r18, 0xFF	; 255
 7b4:	83 ed       	ldi	r24, 0xD3	; 211
 7b6:	90 e3       	ldi	r25, 0x30	; 48
 7b8:	21 50       	subi	r18, 0x01	; 1
 7ba:	80 40       	sbci	r24, 0x00	; 0
 7bc:	90 40       	sbci	r25, 0x00	; 0
 7be:	e1 f7       	brne	.-8      	; 0x7b8 <main+0x8c>
 7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <main+0x96>
 7c2:	00 00       	nop
		_delay_ms(1000);
	}
 7c4:	c6 cf       	rjmp	.-116    	; 0x752 <main+0x26>

000007c6 <__subsf3>:
 7c6:	50 58       	subi	r21, 0x80	; 128

000007c8 <__addsf3>:
 7c8:	bb 27       	eor	r27, r27
 7ca:	aa 27       	eor	r26, r26
 7cc:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__addsf3x>
 7d0:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <__fp_round>
 7d4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__fp_pscA>
 7d8:	38 f0       	brcs	.+14     	; 0x7e8 <__addsf3+0x20>
 7da:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_pscB>
 7de:	20 f0       	brcs	.+8      	; 0x7e8 <__addsf3+0x20>
 7e0:	39 f4       	brne	.+14     	; 0x7f0 <__addsf3+0x28>
 7e2:	9f 3f       	cpi	r25, 0xFF	; 255
 7e4:	19 f4       	brne	.+6      	; 0x7ec <__addsf3+0x24>
 7e6:	26 f4       	brtc	.+8      	; 0x7f0 <__addsf3+0x28>
 7e8:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>
 7ec:	0e f4       	brtc	.+2      	; 0x7f0 <__addsf3+0x28>
 7ee:	e0 95       	com	r30
 7f0:	e7 fb       	bst	r30, 7
 7f2:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>

000007f6 <__addsf3x>:
 7f6:	e9 2f       	mov	r30, r25
 7f8:	0e 94 5d 05 	call	0xaba	; 0xaba <__fp_split3>
 7fc:	58 f3       	brcs	.-42     	; 0x7d4 <__addsf3+0xc>
 7fe:	ba 17       	cp	r27, r26
 800:	62 07       	cpc	r22, r18
 802:	73 07       	cpc	r23, r19
 804:	84 07       	cpc	r24, r20
 806:	95 07       	cpc	r25, r21
 808:	20 f0       	brcs	.+8      	; 0x812 <__addsf3x+0x1c>
 80a:	79 f4       	brne	.+30     	; 0x82a <__addsf3x+0x34>
 80c:	a6 f5       	brtc	.+104    	; 0x876 <__stack+0x17>
 80e:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__fp_zero>
 812:	0e f4       	brtc	.+2      	; 0x816 <__addsf3x+0x20>
 814:	e0 95       	com	r30
 816:	0b 2e       	mov	r0, r27
 818:	ba 2f       	mov	r27, r26
 81a:	a0 2d       	mov	r26, r0
 81c:	0b 01       	movw	r0, r22
 81e:	b9 01       	movw	r22, r18
 820:	90 01       	movw	r18, r0
 822:	0c 01       	movw	r0, r24
 824:	ca 01       	movw	r24, r20
 826:	a0 01       	movw	r20, r0
 828:	11 24       	eor	r1, r1
 82a:	ff 27       	eor	r31, r31
 82c:	59 1b       	sub	r21, r25
 82e:	99 f0       	breq	.+38     	; 0x856 <__addsf3x+0x60>
 830:	59 3f       	cpi	r21, 0xF9	; 249
 832:	50 f4       	brcc	.+20     	; 0x848 <__addsf3x+0x52>
 834:	50 3e       	cpi	r21, 0xE0	; 224
 836:	68 f1       	brcs	.+90     	; 0x892 <__stack+0x33>
 838:	1a 16       	cp	r1, r26
 83a:	f0 40       	sbci	r31, 0x00	; 0
 83c:	a2 2f       	mov	r26, r18
 83e:	23 2f       	mov	r18, r19
 840:	34 2f       	mov	r19, r20
 842:	44 27       	eor	r20, r20
 844:	58 5f       	subi	r21, 0xF8	; 248
 846:	f3 cf       	rjmp	.-26     	; 0x82e <__addsf3x+0x38>
 848:	46 95       	lsr	r20
 84a:	37 95       	ror	r19
 84c:	27 95       	ror	r18
 84e:	a7 95       	ror	r26
 850:	f0 40       	sbci	r31, 0x00	; 0
 852:	53 95       	inc	r21
 854:	c9 f7       	brne	.-14     	; 0x848 <__addsf3x+0x52>
 856:	7e f4       	brtc	.+30     	; 0x876 <__stack+0x17>
 858:	1f 16       	cp	r1, r31
 85a:	ba 0b       	sbc	r27, r26
 85c:	62 0b       	sbc	r22, r18
 85e:	73 0b       	sbc	r23, r19
 860:	84 0b       	sbc	r24, r20
 862:	ba f0       	brmi	.+46     	; 0x892 <__stack+0x33>
 864:	91 50       	subi	r25, 0x01	; 1
 866:	a1 f0       	breq	.+40     	; 0x890 <__stack+0x31>
 868:	ff 0f       	add	r31, r31
 86a:	bb 1f       	adc	r27, r27
 86c:	66 1f       	adc	r22, r22
 86e:	77 1f       	adc	r23, r23
 870:	88 1f       	adc	r24, r24
 872:	c2 f7       	brpl	.-16     	; 0x864 <__stack+0x5>
 874:	0e c0       	rjmp	.+28     	; 0x892 <__stack+0x33>
 876:	ba 0f       	add	r27, r26
 878:	62 1f       	adc	r22, r18
 87a:	73 1f       	adc	r23, r19
 87c:	84 1f       	adc	r24, r20
 87e:	48 f4       	brcc	.+18     	; 0x892 <__stack+0x33>
 880:	87 95       	ror	r24
 882:	77 95       	ror	r23
 884:	67 95       	ror	r22
 886:	b7 95       	ror	r27
 888:	f7 95       	ror	r31
 88a:	9e 3f       	cpi	r25, 0xFE	; 254
 88c:	08 f0       	brcs	.+2      	; 0x890 <__stack+0x31>
 88e:	b0 cf       	rjmp	.-160    	; 0x7f0 <__addsf3+0x28>
 890:	93 95       	inc	r25
 892:	88 0f       	add	r24, r24
 894:	08 f0       	brcs	.+2      	; 0x898 <__stack+0x39>
 896:	99 27       	eor	r25, r25
 898:	ee 0f       	add	r30, r30
 89a:	97 95       	ror	r25
 89c:	87 95       	ror	r24
 89e:	08 95       	ret

000008a0 <__divsf3>:
 8a0:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__divsf3x>
 8a4:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <__fp_round>
 8a8:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_pscB>
 8ac:	58 f0       	brcs	.+22     	; 0x8c4 <__divsf3+0x24>
 8ae:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__fp_pscA>
 8b2:	40 f0       	brcs	.+16     	; 0x8c4 <__divsf3+0x24>
 8b4:	29 f4       	brne	.+10     	; 0x8c0 <__divsf3+0x20>
 8b6:	5f 3f       	cpi	r21, 0xFF	; 255
 8b8:	29 f0       	breq	.+10     	; 0x8c4 <__divsf3+0x24>
 8ba:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 8be:	51 11       	cpse	r21, r1
 8c0:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>
 8c4:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>

000008c8 <__divsf3x>:
 8c8:	0e 94 5d 05 	call	0xaba	; 0xaba <__fp_split3>
 8cc:	68 f3       	brcs	.-38     	; 0x8a8 <__divsf3+0x8>

000008ce <__divsf3_pse>:
 8ce:	99 23       	and	r25, r25
 8d0:	b1 f3       	breq	.-20     	; 0x8be <__divsf3+0x1e>
 8d2:	55 23       	and	r21, r21
 8d4:	91 f3       	breq	.-28     	; 0x8ba <__divsf3+0x1a>
 8d6:	95 1b       	sub	r25, r21
 8d8:	55 0b       	sbc	r21, r21
 8da:	bb 27       	eor	r27, r27
 8dc:	aa 27       	eor	r26, r26
 8de:	62 17       	cp	r22, r18
 8e0:	73 07       	cpc	r23, r19
 8e2:	84 07       	cpc	r24, r20
 8e4:	38 f0       	brcs	.+14     	; 0x8f4 <__divsf3_pse+0x26>
 8e6:	9f 5f       	subi	r25, 0xFF	; 255
 8e8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ea:	22 0f       	add	r18, r18
 8ec:	33 1f       	adc	r19, r19
 8ee:	44 1f       	adc	r20, r20
 8f0:	aa 1f       	adc	r26, r26
 8f2:	a9 f3       	breq	.-22     	; 0x8de <__divsf3_pse+0x10>
 8f4:	35 d0       	rcall	.+106    	; 0x960 <__divsf3_pse+0x92>
 8f6:	0e 2e       	mov	r0, r30
 8f8:	3a f0       	brmi	.+14     	; 0x908 <__divsf3_pse+0x3a>
 8fa:	e0 e8       	ldi	r30, 0x80	; 128
 8fc:	32 d0       	rcall	.+100    	; 0x962 <__divsf3_pse+0x94>
 8fe:	91 50       	subi	r25, 0x01	; 1
 900:	50 40       	sbci	r21, 0x00	; 0
 902:	e6 95       	lsr	r30
 904:	00 1c       	adc	r0, r0
 906:	ca f7       	brpl	.-14     	; 0x8fa <__divsf3_pse+0x2c>
 908:	2b d0       	rcall	.+86     	; 0x960 <__divsf3_pse+0x92>
 90a:	fe 2f       	mov	r31, r30
 90c:	29 d0       	rcall	.+82     	; 0x960 <__divsf3_pse+0x92>
 90e:	66 0f       	add	r22, r22
 910:	77 1f       	adc	r23, r23
 912:	88 1f       	adc	r24, r24
 914:	bb 1f       	adc	r27, r27
 916:	26 17       	cp	r18, r22
 918:	37 07       	cpc	r19, r23
 91a:	48 07       	cpc	r20, r24
 91c:	ab 07       	cpc	r26, r27
 91e:	b0 e8       	ldi	r27, 0x80	; 128
 920:	09 f0       	breq	.+2      	; 0x924 <__divsf3_pse+0x56>
 922:	bb 0b       	sbc	r27, r27
 924:	80 2d       	mov	r24, r0
 926:	bf 01       	movw	r22, r30
 928:	ff 27       	eor	r31, r31
 92a:	93 58       	subi	r25, 0x83	; 131
 92c:	5f 4f       	sbci	r21, 0xFF	; 255
 92e:	3a f0       	brmi	.+14     	; 0x93e <__divsf3_pse+0x70>
 930:	9e 3f       	cpi	r25, 0xFE	; 254
 932:	51 05       	cpc	r21, r1
 934:	78 f0       	brcs	.+30     	; 0x954 <__divsf3_pse+0x86>
 936:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 93a:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>
 93e:	5f 3f       	cpi	r21, 0xFF	; 255
 940:	e4 f3       	brlt	.-8      	; 0x93a <__divsf3_pse+0x6c>
 942:	98 3e       	cpi	r25, 0xE8	; 232
 944:	d4 f3       	brlt	.-12     	; 0x93a <__divsf3_pse+0x6c>
 946:	86 95       	lsr	r24
 948:	77 95       	ror	r23
 94a:	67 95       	ror	r22
 94c:	b7 95       	ror	r27
 94e:	f7 95       	ror	r31
 950:	9f 5f       	subi	r25, 0xFF	; 255
 952:	c9 f7       	brne	.-14     	; 0x946 <__divsf3_pse+0x78>
 954:	88 0f       	add	r24, r24
 956:	91 1d       	adc	r25, r1
 958:	96 95       	lsr	r25
 95a:	87 95       	ror	r24
 95c:	97 f9       	bld	r25, 7
 95e:	08 95       	ret
 960:	e1 e0       	ldi	r30, 0x01	; 1
 962:	66 0f       	add	r22, r22
 964:	77 1f       	adc	r23, r23
 966:	88 1f       	adc	r24, r24
 968:	bb 1f       	adc	r27, r27
 96a:	62 17       	cp	r22, r18
 96c:	73 07       	cpc	r23, r19
 96e:	84 07       	cpc	r24, r20
 970:	ba 07       	cpc	r27, r26
 972:	20 f0       	brcs	.+8      	; 0x97c <__divsf3_pse+0xae>
 974:	62 1b       	sub	r22, r18
 976:	73 0b       	sbc	r23, r19
 978:	84 0b       	sbc	r24, r20
 97a:	ba 0b       	sbc	r27, r26
 97c:	ee 1f       	adc	r30, r30
 97e:	88 f7       	brcc	.-30     	; 0x962 <__divsf3_pse+0x94>
 980:	e0 95       	com	r30
 982:	08 95       	ret

00000984 <__fixsfsi>:
 984:	0e 94 c9 04 	call	0x992	; 0x992 <__fixunssfsi>
 988:	68 94       	set
 98a:	b1 11       	cpse	r27, r1
 98c:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>
 990:	08 95       	ret

00000992 <__fixunssfsi>:
 992:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_splitA>
 996:	88 f0       	brcs	.+34     	; 0x9ba <__fixunssfsi+0x28>
 998:	9f 57       	subi	r25, 0x7F	; 127
 99a:	98 f0       	brcs	.+38     	; 0x9c2 <__fixunssfsi+0x30>
 99c:	b9 2f       	mov	r27, r25
 99e:	99 27       	eor	r25, r25
 9a0:	b7 51       	subi	r27, 0x17	; 23
 9a2:	b0 f0       	brcs	.+44     	; 0x9d0 <__fixunssfsi+0x3e>
 9a4:	e1 f0       	breq	.+56     	; 0x9de <__fixunssfsi+0x4c>
 9a6:	66 0f       	add	r22, r22
 9a8:	77 1f       	adc	r23, r23
 9aa:	88 1f       	adc	r24, r24
 9ac:	99 1f       	adc	r25, r25
 9ae:	1a f0       	brmi	.+6      	; 0x9b6 <__fixunssfsi+0x24>
 9b0:	ba 95       	dec	r27
 9b2:	c9 f7       	brne	.-14     	; 0x9a6 <__fixunssfsi+0x14>
 9b4:	14 c0       	rjmp	.+40     	; 0x9de <__fixunssfsi+0x4c>
 9b6:	b1 30       	cpi	r27, 0x01	; 1
 9b8:	91 f0       	breq	.+36     	; 0x9de <__fixunssfsi+0x4c>
 9ba:	0e 94 7f 05 	call	0xafe	; 0xafe <__fp_zero>
 9be:	b1 e0       	ldi	r27, 0x01	; 1
 9c0:	08 95       	ret
 9c2:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__fp_zero>
 9c6:	67 2f       	mov	r22, r23
 9c8:	78 2f       	mov	r23, r24
 9ca:	88 27       	eor	r24, r24
 9cc:	b8 5f       	subi	r27, 0xF8	; 248
 9ce:	39 f0       	breq	.+14     	; 0x9de <__fixunssfsi+0x4c>
 9d0:	b9 3f       	cpi	r27, 0xF9	; 249
 9d2:	cc f3       	brlt	.-14     	; 0x9c6 <__fixunssfsi+0x34>
 9d4:	86 95       	lsr	r24
 9d6:	77 95       	ror	r23
 9d8:	67 95       	ror	r22
 9da:	b3 95       	inc	r27
 9dc:	d9 f7       	brne	.-10     	; 0x9d4 <__fixunssfsi+0x42>
 9de:	3e f4       	brtc	.+14     	; 0x9ee <__fixunssfsi+0x5c>
 9e0:	90 95       	com	r25
 9e2:	80 95       	com	r24
 9e4:	70 95       	com	r23
 9e6:	61 95       	neg	r22
 9e8:	7f 4f       	sbci	r23, 0xFF	; 255
 9ea:	8f 4f       	sbci	r24, 0xFF	; 255
 9ec:	9f 4f       	sbci	r25, 0xFF	; 255
 9ee:	08 95       	ret

000009f0 <__floatunsisf>:
 9f0:	e8 94       	clt
 9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__floatsisf+0x12>

000009f4 <__floatsisf>:
 9f4:	97 fb       	bst	r25, 7
 9f6:	3e f4       	brtc	.+14     	; 0xa06 <__floatsisf+0x12>
 9f8:	90 95       	com	r25
 9fa:	80 95       	com	r24
 9fc:	70 95       	com	r23
 9fe:	61 95       	neg	r22
 a00:	7f 4f       	sbci	r23, 0xFF	; 255
 a02:	8f 4f       	sbci	r24, 0xFF	; 255
 a04:	9f 4f       	sbci	r25, 0xFF	; 255
 a06:	99 23       	and	r25, r25
 a08:	a9 f0       	breq	.+42     	; 0xa34 <__floatsisf+0x40>
 a0a:	f9 2f       	mov	r31, r25
 a0c:	96 e9       	ldi	r25, 0x96	; 150
 a0e:	bb 27       	eor	r27, r27
 a10:	93 95       	inc	r25
 a12:	f6 95       	lsr	r31
 a14:	87 95       	ror	r24
 a16:	77 95       	ror	r23
 a18:	67 95       	ror	r22
 a1a:	b7 95       	ror	r27
 a1c:	f1 11       	cpse	r31, r1
 a1e:	f8 cf       	rjmp	.-16     	; 0xa10 <__floatsisf+0x1c>
 a20:	fa f4       	brpl	.+62     	; 0xa60 <__floatsisf+0x6c>
 a22:	bb 0f       	add	r27, r27
 a24:	11 f4       	brne	.+4      	; 0xa2a <__floatsisf+0x36>
 a26:	60 ff       	sbrs	r22, 0
 a28:	1b c0       	rjmp	.+54     	; 0xa60 <__floatsisf+0x6c>
 a2a:	6f 5f       	subi	r22, 0xFF	; 255
 a2c:	7f 4f       	sbci	r23, 0xFF	; 255
 a2e:	8f 4f       	sbci	r24, 0xFF	; 255
 a30:	9f 4f       	sbci	r25, 0xFF	; 255
 a32:	16 c0       	rjmp	.+44     	; 0xa60 <__floatsisf+0x6c>
 a34:	88 23       	and	r24, r24
 a36:	11 f0       	breq	.+4      	; 0xa3c <__floatsisf+0x48>
 a38:	96 e9       	ldi	r25, 0x96	; 150
 a3a:	11 c0       	rjmp	.+34     	; 0xa5e <__floatsisf+0x6a>
 a3c:	77 23       	and	r23, r23
 a3e:	21 f0       	breq	.+8      	; 0xa48 <__floatsisf+0x54>
 a40:	9e e8       	ldi	r25, 0x8E	; 142
 a42:	87 2f       	mov	r24, r23
 a44:	76 2f       	mov	r23, r22
 a46:	05 c0       	rjmp	.+10     	; 0xa52 <__floatsisf+0x5e>
 a48:	66 23       	and	r22, r22
 a4a:	71 f0       	breq	.+28     	; 0xa68 <__floatsisf+0x74>
 a4c:	96 e8       	ldi	r25, 0x86	; 134
 a4e:	86 2f       	mov	r24, r22
 a50:	70 e0       	ldi	r23, 0x00	; 0
 a52:	60 e0       	ldi	r22, 0x00	; 0
 a54:	2a f0       	brmi	.+10     	; 0xa60 <__floatsisf+0x6c>
 a56:	9a 95       	dec	r25
 a58:	66 0f       	add	r22, r22
 a5a:	77 1f       	adc	r23, r23
 a5c:	88 1f       	adc	r24, r24
 a5e:	da f7       	brpl	.-10     	; 0xa56 <__floatsisf+0x62>
 a60:	88 0f       	add	r24, r24
 a62:	96 95       	lsr	r25
 a64:	87 95       	ror	r24
 a66:	97 f9       	bld	r25, 7
 a68:	08 95       	ret

00000a6a <__fp_inf>:
 a6a:	97 f9       	bld	r25, 7
 a6c:	9f 67       	ori	r25, 0x7F	; 127
 a6e:	80 e8       	ldi	r24, 0x80	; 128
 a70:	70 e0       	ldi	r23, 0x00	; 0
 a72:	60 e0       	ldi	r22, 0x00	; 0
 a74:	08 95       	ret

00000a76 <__fp_nan>:
 a76:	9f ef       	ldi	r25, 0xFF	; 255
 a78:	80 ec       	ldi	r24, 0xC0	; 192
 a7a:	08 95       	ret

00000a7c <__fp_pscA>:
 a7c:	00 24       	eor	r0, r0
 a7e:	0a 94       	dec	r0
 a80:	16 16       	cp	r1, r22
 a82:	17 06       	cpc	r1, r23
 a84:	18 06       	cpc	r1, r24
 a86:	09 06       	cpc	r0, r25
 a88:	08 95       	ret

00000a8a <__fp_pscB>:
 a8a:	00 24       	eor	r0, r0
 a8c:	0a 94       	dec	r0
 a8e:	12 16       	cp	r1, r18
 a90:	13 06       	cpc	r1, r19
 a92:	14 06       	cpc	r1, r20
 a94:	05 06       	cpc	r0, r21
 a96:	08 95       	ret

00000a98 <__fp_round>:
 a98:	09 2e       	mov	r0, r25
 a9a:	03 94       	inc	r0
 a9c:	00 0c       	add	r0, r0
 a9e:	11 f4       	brne	.+4      	; 0xaa4 <__fp_round+0xc>
 aa0:	88 23       	and	r24, r24
 aa2:	52 f0       	brmi	.+20     	; 0xab8 <__fp_round+0x20>
 aa4:	bb 0f       	add	r27, r27
 aa6:	40 f4       	brcc	.+16     	; 0xab8 <__fp_round+0x20>
 aa8:	bf 2b       	or	r27, r31
 aaa:	11 f4       	brne	.+4      	; 0xab0 <__fp_round+0x18>
 aac:	60 ff       	sbrs	r22, 0
 aae:	04 c0       	rjmp	.+8      	; 0xab8 <__fp_round+0x20>
 ab0:	6f 5f       	subi	r22, 0xFF	; 255
 ab2:	7f 4f       	sbci	r23, 0xFF	; 255
 ab4:	8f 4f       	sbci	r24, 0xFF	; 255
 ab6:	9f 4f       	sbci	r25, 0xFF	; 255
 ab8:	08 95       	ret

00000aba <__fp_split3>:
 aba:	57 fd       	sbrc	r21, 7
 abc:	90 58       	subi	r25, 0x80	; 128
 abe:	44 0f       	add	r20, r20
 ac0:	55 1f       	adc	r21, r21
 ac2:	59 f0       	breq	.+22     	; 0xada <__fp_splitA+0x10>
 ac4:	5f 3f       	cpi	r21, 0xFF	; 255
 ac6:	71 f0       	breq	.+28     	; 0xae4 <__fp_splitA+0x1a>
 ac8:	47 95       	ror	r20

00000aca <__fp_splitA>:
 aca:	88 0f       	add	r24, r24
 acc:	97 fb       	bst	r25, 7
 ace:	99 1f       	adc	r25, r25
 ad0:	61 f0       	breq	.+24     	; 0xaea <__fp_splitA+0x20>
 ad2:	9f 3f       	cpi	r25, 0xFF	; 255
 ad4:	79 f0       	breq	.+30     	; 0xaf4 <__fp_splitA+0x2a>
 ad6:	87 95       	ror	r24
 ad8:	08 95       	ret
 ada:	12 16       	cp	r1, r18
 adc:	13 06       	cpc	r1, r19
 ade:	14 06       	cpc	r1, r20
 ae0:	55 1f       	adc	r21, r21
 ae2:	f2 cf       	rjmp	.-28     	; 0xac8 <__fp_split3+0xe>
 ae4:	46 95       	lsr	r20
 ae6:	f1 df       	rcall	.-30     	; 0xaca <__fp_splitA>
 ae8:	08 c0       	rjmp	.+16     	; 0xafa <__fp_splitA+0x30>
 aea:	16 16       	cp	r1, r22
 aec:	17 06       	cpc	r1, r23
 aee:	18 06       	cpc	r1, r24
 af0:	99 1f       	adc	r25, r25
 af2:	f1 cf       	rjmp	.-30     	; 0xad6 <__fp_splitA+0xc>
 af4:	86 95       	lsr	r24
 af6:	71 05       	cpc	r23, r1
 af8:	61 05       	cpc	r22, r1
 afa:	08 94       	sec
 afc:	08 95       	ret

00000afe <__fp_zero>:
 afe:	e8 94       	clt

00000b00 <__fp_szero>:
 b00:	bb 27       	eor	r27, r27
 b02:	66 27       	eor	r22, r22
 b04:	77 27       	eor	r23, r23
 b06:	cb 01       	movw	r24, r22
 b08:	97 f9       	bld	r25, 7
 b0a:	08 95       	ret

00000b0c <__mulsf3>:
 b0c:	0e 94 99 05 	call	0xb32	; 0xb32 <__mulsf3x>
 b10:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <__fp_round>
 b14:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__fp_pscA>
 b18:	38 f0       	brcs	.+14     	; 0xb28 <__mulsf3+0x1c>
 b1a:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_pscB>
 b1e:	20 f0       	brcs	.+8      	; 0xb28 <__mulsf3+0x1c>
 b20:	95 23       	and	r25, r21
 b22:	11 f0       	breq	.+4      	; 0xb28 <__mulsf3+0x1c>
 b24:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 b28:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>
 b2c:	11 24       	eor	r1, r1
 b2e:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>

00000b32 <__mulsf3x>:
 b32:	0e 94 5d 05 	call	0xaba	; 0xaba <__fp_split3>
 b36:	70 f3       	brcs	.-36     	; 0xb14 <__mulsf3+0x8>

00000b38 <__mulsf3_pse>:
 b38:	95 9f       	mul	r25, r21
 b3a:	c1 f3       	breq	.-16     	; 0xb2c <__mulsf3+0x20>
 b3c:	95 0f       	add	r25, r21
 b3e:	50 e0       	ldi	r21, 0x00	; 0
 b40:	55 1f       	adc	r21, r21
 b42:	62 9f       	mul	r22, r18
 b44:	f0 01       	movw	r30, r0
 b46:	72 9f       	mul	r23, r18
 b48:	bb 27       	eor	r27, r27
 b4a:	f0 0d       	add	r31, r0
 b4c:	b1 1d       	adc	r27, r1
 b4e:	63 9f       	mul	r22, r19
 b50:	aa 27       	eor	r26, r26
 b52:	f0 0d       	add	r31, r0
 b54:	b1 1d       	adc	r27, r1
 b56:	aa 1f       	adc	r26, r26
 b58:	64 9f       	mul	r22, r20
 b5a:	66 27       	eor	r22, r22
 b5c:	b0 0d       	add	r27, r0
 b5e:	a1 1d       	adc	r26, r1
 b60:	66 1f       	adc	r22, r22
 b62:	82 9f       	mul	r24, r18
 b64:	22 27       	eor	r18, r18
 b66:	b0 0d       	add	r27, r0
 b68:	a1 1d       	adc	r26, r1
 b6a:	62 1f       	adc	r22, r18
 b6c:	73 9f       	mul	r23, r19
 b6e:	b0 0d       	add	r27, r0
 b70:	a1 1d       	adc	r26, r1
 b72:	62 1f       	adc	r22, r18
 b74:	83 9f       	mul	r24, r19
 b76:	a0 0d       	add	r26, r0
 b78:	61 1d       	adc	r22, r1
 b7a:	22 1f       	adc	r18, r18
 b7c:	74 9f       	mul	r23, r20
 b7e:	33 27       	eor	r19, r19
 b80:	a0 0d       	add	r26, r0
 b82:	61 1d       	adc	r22, r1
 b84:	23 1f       	adc	r18, r19
 b86:	84 9f       	mul	r24, r20
 b88:	60 0d       	add	r22, r0
 b8a:	21 1d       	adc	r18, r1
 b8c:	82 2f       	mov	r24, r18
 b8e:	76 2f       	mov	r23, r22
 b90:	6a 2f       	mov	r22, r26
 b92:	11 24       	eor	r1, r1
 b94:	9f 57       	subi	r25, 0x7F	; 127
 b96:	50 40       	sbci	r21, 0x00	; 0
 b98:	9a f0       	brmi	.+38     	; 0xbc0 <__mulsf3_pse+0x88>
 b9a:	f1 f0       	breq	.+60     	; 0xbd8 <__mulsf3_pse+0xa0>
 b9c:	88 23       	and	r24, r24
 b9e:	4a f0       	brmi	.+18     	; 0xbb2 <__mulsf3_pse+0x7a>
 ba0:	ee 0f       	add	r30, r30
 ba2:	ff 1f       	adc	r31, r31
 ba4:	bb 1f       	adc	r27, r27
 ba6:	66 1f       	adc	r22, r22
 ba8:	77 1f       	adc	r23, r23
 baa:	88 1f       	adc	r24, r24
 bac:	91 50       	subi	r25, 0x01	; 1
 bae:	50 40       	sbci	r21, 0x00	; 0
 bb0:	a9 f7       	brne	.-22     	; 0xb9c <__mulsf3_pse+0x64>
 bb2:	9e 3f       	cpi	r25, 0xFE	; 254
 bb4:	51 05       	cpc	r21, r1
 bb6:	80 f0       	brcs	.+32     	; 0xbd8 <__mulsf3_pse+0xa0>
 bb8:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 bbc:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>
 bc0:	5f 3f       	cpi	r21, 0xFF	; 255
 bc2:	e4 f3       	brlt	.-8      	; 0xbbc <__mulsf3_pse+0x84>
 bc4:	98 3e       	cpi	r25, 0xE8	; 232
 bc6:	d4 f3       	brlt	.-12     	; 0xbbc <__mulsf3_pse+0x84>
 bc8:	86 95       	lsr	r24
 bca:	77 95       	ror	r23
 bcc:	67 95       	ror	r22
 bce:	b7 95       	ror	r27
 bd0:	f7 95       	ror	r31
 bd2:	e7 95       	ror	r30
 bd4:	9f 5f       	subi	r25, 0xFF	; 255
 bd6:	c1 f7       	brne	.-16     	; 0xbc8 <__mulsf3_pse+0x90>
 bd8:	fe 2b       	or	r31, r30
 bda:	88 0f       	add	r24, r24
 bdc:	91 1d       	adc	r25, r1
 bde:	96 95       	lsr	r25
 be0:	87 95       	ror	r24
 be2:	97 f9       	bld	r25, 7
 be4:	08 95       	ret

00000be6 <pow>:
 be6:	fa 01       	movw	r30, r20
 be8:	ee 0f       	add	r30, r30
 bea:	ff 1f       	adc	r31, r31
 bec:	30 96       	adiw	r30, 0x00	; 0
 bee:	21 05       	cpc	r18, r1
 bf0:	31 05       	cpc	r19, r1
 bf2:	a1 f1       	breq	.+104    	; 0xc5c <pow+0x76>
 bf4:	61 15       	cp	r22, r1
 bf6:	71 05       	cpc	r23, r1
 bf8:	61 f4       	brne	.+24     	; 0xc12 <pow+0x2c>
 bfa:	80 38       	cpi	r24, 0x80	; 128
 bfc:	bf e3       	ldi	r27, 0x3F	; 63
 bfe:	9b 07       	cpc	r25, r27
 c00:	49 f1       	breq	.+82     	; 0xc54 <pow+0x6e>
 c02:	68 94       	set
 c04:	90 38       	cpi	r25, 0x80	; 128
 c06:	81 05       	cpc	r24, r1
 c08:	61 f0       	breq	.+24     	; 0xc22 <pow+0x3c>
 c0a:	80 38       	cpi	r24, 0x80	; 128
 c0c:	bf ef       	ldi	r27, 0xFF	; 255
 c0e:	9b 07       	cpc	r25, r27
 c10:	41 f0       	breq	.+16     	; 0xc22 <pow+0x3c>
 c12:	99 23       	and	r25, r25
 c14:	4a f5       	brpl	.+82     	; 0xc68 <pow+0x82>
 c16:	ff 3f       	cpi	r31, 0xFF	; 255
 c18:	e1 05       	cpc	r30, r1
 c1a:	31 05       	cpc	r19, r1
 c1c:	21 05       	cpc	r18, r1
 c1e:	19 f1       	breq	.+70     	; 0xc66 <pow+0x80>
 c20:	e8 94       	clt
 c22:	08 94       	sec
 c24:	e7 95       	ror	r30
 c26:	d9 01       	movw	r26, r18
 c28:	aa 23       	and	r26, r26
 c2a:	29 f4       	brne	.+10     	; 0xc36 <pow+0x50>
 c2c:	ab 2f       	mov	r26, r27
 c2e:	be 2f       	mov	r27, r30
 c30:	f8 5f       	subi	r31, 0xF8	; 248
 c32:	d0 f3       	brcs	.-12     	; 0xc28 <pow+0x42>
 c34:	10 c0       	rjmp	.+32     	; 0xc56 <pow+0x70>
 c36:	ff 5f       	subi	r31, 0xFF	; 255
 c38:	70 f4       	brcc	.+28     	; 0xc56 <pow+0x70>
 c3a:	a6 95       	lsr	r26
 c3c:	e0 f7       	brcc	.-8      	; 0xc36 <pow+0x50>
 c3e:	f7 39       	cpi	r31, 0x97	; 151
 c40:	50 f0       	brcs	.+20     	; 0xc56 <pow+0x70>
 c42:	19 f0       	breq	.+6      	; 0xc4a <pow+0x64>
 c44:	ff 3a       	cpi	r31, 0xAF	; 175
 c46:	38 f4       	brcc	.+14     	; 0xc56 <pow+0x70>
 c48:	9f 77       	andi	r25, 0x7F	; 127
 c4a:	9f 93       	push	r25
 c4c:	0d d0       	rcall	.+26     	; 0xc68 <pow+0x82>
 c4e:	0f 90       	pop	r0
 c50:	07 fc       	sbrc	r0, 7
 c52:	90 58       	subi	r25, 0x80	; 128
 c54:	08 95       	ret
 c56:	46 f0       	brts	.+16     	; 0xc68 <pow+0x82>
 c58:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>
 c5c:	60 e0       	ldi	r22, 0x00	; 0
 c5e:	70 e0       	ldi	r23, 0x00	; 0
 c60:	80 e8       	ldi	r24, 0x80	; 128
 c62:	9f e3       	ldi	r25, 0x3F	; 63
 c64:	08 95       	ret
 c66:	4f e7       	ldi	r20, 0x7F	; 127
 c68:	9f 77       	andi	r25, 0x7F	; 127
 c6a:	5f 93       	push	r21
 c6c:	4f 93       	push	r20
 c6e:	3f 93       	push	r19
 c70:	2f 93       	push	r18
 c72:	0e 94 ee 06 	call	0xddc	; 0xddc <log>
 c76:	2f 91       	pop	r18
 c78:	3f 91       	pop	r19
 c7a:	4f 91       	pop	r20
 c7c:	5f 91       	pop	r21
 c7e:	0e 94 86 05 	call	0xb0c	; 0xb0c <__mulsf3>
 c82:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <exp>
 c86:	29 f4       	brne	.+10     	; 0xc92 <pow+0xac>
 c88:	16 f0       	brts	.+4      	; 0xc8e <pow+0xa8>
 c8a:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 c8e:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__fp_zero>
 c92:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>

00000c96 <exp>:
 c96:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_splitA>
 c9a:	a8 f3       	brcs	.-22     	; 0xc86 <pow+0xa0>
 c9c:	96 38       	cpi	r25, 0x86	; 134
 c9e:	a0 f7       	brcc	.-24     	; 0xc88 <pow+0xa2>
 ca0:	07 f8       	bld	r0, 7
 ca2:	0f 92       	push	r0
 ca4:	e8 94       	clt
 ca6:	2b e3       	ldi	r18, 0x3B	; 59
 ca8:	3a ea       	ldi	r19, 0xAA	; 170
 caa:	48 eb       	ldi	r20, 0xB8	; 184
 cac:	5f e7       	ldi	r21, 0x7F	; 127
 cae:	0e 94 9c 05 	call	0xb38	; 0xb38 <__mulsf3_pse>
 cb2:	0f 92       	push	r0
 cb4:	0f 92       	push	r0
 cb6:	0f 92       	push	r0
 cb8:	4d b7       	in	r20, 0x3d	; 61
 cba:	5e b7       	in	r21, 0x3e	; 62
 cbc:	0f 92       	push	r0
 cbe:	0e 94 36 07 	call	0xe6c	; 0xe6c <modf>
 cc2:	e4 e5       	ldi	r30, 0x54	; 84
 cc4:	f0 e0       	ldi	r31, 0x00	; 0
 cc6:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__fp_powser>
 cca:	4f 91       	pop	r20
 ccc:	5f 91       	pop	r21
 cce:	ef 91       	pop	r30
 cd0:	ff 91       	pop	r31
 cd2:	e5 95       	asr	r30
 cd4:	ee 1f       	adc	r30, r30
 cd6:	ff 1f       	adc	r31, r31
 cd8:	49 f0       	breq	.+18     	; 0xcec <exp+0x56>
 cda:	fe 57       	subi	r31, 0x7E	; 126
 cdc:	e0 68       	ori	r30, 0x80	; 128
 cde:	44 27       	eor	r20, r20
 ce0:	ee 0f       	add	r30, r30
 ce2:	44 1f       	adc	r20, r20
 ce4:	fa 95       	dec	r31
 ce6:	e1 f7       	brne	.-8      	; 0xce0 <exp+0x4a>
 ce8:	41 95       	neg	r20
 cea:	55 0b       	sbc	r21, r21
 cec:	0e 94 b0 06 	call	0xd60	; 0xd60 <ldexp>
 cf0:	0f 90       	pop	r0
 cf2:	07 fe       	sbrs	r0, 7
 cf4:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <inverse>
 cf8:	08 95       	ret

00000cfa <__fp_powser>:
 cfa:	df 93       	push	r29
 cfc:	cf 93       	push	r28
 cfe:	1f 93       	push	r17
 d00:	0f 93       	push	r16
 d02:	ff 92       	push	r15
 d04:	ef 92       	push	r14
 d06:	df 92       	push	r13
 d08:	7b 01       	movw	r14, r22
 d0a:	8c 01       	movw	r16, r24
 d0c:	68 94       	set
 d0e:	06 c0       	rjmp	.+12     	; 0xd1c <__fp_powser+0x22>
 d10:	da 2e       	mov	r13, r26
 d12:	ef 01       	movw	r28, r30
 d14:	0e 94 99 05 	call	0xb32	; 0xb32 <__mulsf3x>
 d18:	fe 01       	movw	r30, r28
 d1a:	e8 94       	clt
 d1c:	a5 91       	lpm	r26, Z+
 d1e:	25 91       	lpm	r18, Z+
 d20:	35 91       	lpm	r19, Z+
 d22:	45 91       	lpm	r20, Z+
 d24:	55 91       	lpm	r21, Z+
 d26:	a6 f3       	brts	.-24     	; 0xd10 <__fp_powser+0x16>
 d28:	ef 01       	movw	r28, r30
 d2a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__addsf3x>
 d2e:	fe 01       	movw	r30, r28
 d30:	97 01       	movw	r18, r14
 d32:	a8 01       	movw	r20, r16
 d34:	da 94       	dec	r13
 d36:	69 f7       	brne	.-38     	; 0xd12 <__fp_powser+0x18>
 d38:	df 90       	pop	r13
 d3a:	ef 90       	pop	r14
 d3c:	ff 90       	pop	r15
 d3e:	0f 91       	pop	r16
 d40:	1f 91       	pop	r17
 d42:	cf 91       	pop	r28
 d44:	df 91       	pop	r29
 d46:	08 95       	ret

00000d48 <inverse>:
 d48:	9b 01       	movw	r18, r22
 d4a:	ac 01       	movw	r20, r24
 d4c:	60 e0       	ldi	r22, 0x00	; 0
 d4e:	70 e0       	ldi	r23, 0x00	; 0
 d50:	80 e8       	ldi	r24, 0x80	; 128
 d52:	9f e3       	ldi	r25, 0x3F	; 63
 d54:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <__divsf3>
 d58:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>
 d5c:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__fp_mpack>

00000d60 <ldexp>:
 d60:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_splitA>
 d64:	d8 f3       	brcs	.-10     	; 0xd5c <inverse+0x14>
 d66:	99 23       	and	r25, r25
 d68:	c9 f3       	breq	.-14     	; 0xd5c <inverse+0x14>
 d6a:	94 0f       	add	r25, r20
 d6c:	51 1d       	adc	r21, r1
 d6e:	a3 f3       	brvs	.-24     	; 0xd58 <inverse+0x10>
 d70:	91 50       	subi	r25, 0x01	; 1
 d72:	50 40       	sbci	r21, 0x00	; 0
 d74:	94 f0       	brlt	.+36     	; 0xd9a <ldexp+0x3a>
 d76:	59 f0       	breq	.+22     	; 0xd8e <ldexp+0x2e>
 d78:	88 23       	and	r24, r24
 d7a:	32 f0       	brmi	.+12     	; 0xd88 <ldexp+0x28>
 d7c:	66 0f       	add	r22, r22
 d7e:	77 1f       	adc	r23, r23
 d80:	88 1f       	adc	r24, r24
 d82:	91 50       	subi	r25, 0x01	; 1
 d84:	50 40       	sbci	r21, 0x00	; 0
 d86:	c1 f7       	brne	.-16     	; 0xd78 <ldexp+0x18>
 d88:	9e 3f       	cpi	r25, 0xFE	; 254
 d8a:	51 05       	cpc	r21, r1
 d8c:	2c f7       	brge	.-54     	; 0xd58 <inverse+0x10>
 d8e:	88 0f       	add	r24, r24
 d90:	91 1d       	adc	r25, r1
 d92:	96 95       	lsr	r25
 d94:	87 95       	ror	r24
 d96:	97 f9       	bld	r25, 7
 d98:	08 95       	ret
 d9a:	5f 3f       	cpi	r21, 0xFF	; 255
 d9c:	ac f0       	brlt	.+42     	; 0xdc8 <ldexp+0x68>
 d9e:	98 3e       	cpi	r25, 0xE8	; 232
 da0:	9c f0       	brlt	.+38     	; 0xdc8 <ldexp+0x68>
 da2:	bb 27       	eor	r27, r27
 da4:	86 95       	lsr	r24
 da6:	77 95       	ror	r23
 da8:	67 95       	ror	r22
 daa:	b7 95       	ror	r27
 dac:	08 f4       	brcc	.+2      	; 0xdb0 <ldexp+0x50>
 dae:	b1 60       	ori	r27, 0x01	; 1
 db0:	93 95       	inc	r25
 db2:	c1 f7       	brne	.-16     	; 0xda4 <ldexp+0x44>
 db4:	bb 0f       	add	r27, r27
 db6:	58 f7       	brcc	.-42     	; 0xd8e <ldexp+0x2e>
 db8:	11 f4       	brne	.+4      	; 0xdbe <ldexp+0x5e>
 dba:	60 ff       	sbrs	r22, 0
 dbc:	e8 cf       	rjmp	.-48     	; 0xd8e <ldexp+0x2e>
 dbe:	6f 5f       	subi	r22, 0xFF	; 255
 dc0:	7f 4f       	sbci	r23, 0xFF	; 255
 dc2:	8f 4f       	sbci	r24, 0xFF	; 255
 dc4:	9f 4f       	sbci	r25, 0xFF	; 255
 dc6:	e3 cf       	rjmp	.-58     	; 0xd8e <ldexp+0x2e>
 dc8:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_szero>
 dcc:	16 f0       	brts	.+4      	; 0xdd2 <ldexp+0x72>
 dce:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__fp_mpack>
 dd2:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_nan>
 dd6:	68 94       	set
 dd8:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_inf>

00000ddc <log>:
 ddc:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_splitA>
 de0:	a8 f3       	brcs	.-22     	; 0xdcc <ldexp+0x6c>
 de2:	99 23       	and	r25, r25
 de4:	c1 f3       	breq	.-16     	; 0xdd6 <ldexp+0x76>
 de6:	ae f3       	brts	.-22     	; 0xdd2 <ldexp+0x72>
 de8:	df 93       	push	r29
 dea:	cf 93       	push	r28
 dec:	1f 93       	push	r17
 dee:	0f 93       	push	r16
 df0:	ff 92       	push	r15
 df2:	c9 2f       	mov	r28, r25
 df4:	dd 27       	eor	r29, r29
 df6:	88 23       	and	r24, r24
 df8:	2a f0       	brmi	.+10     	; 0xe04 <log+0x28>
 dfa:	21 97       	sbiw	r28, 0x01	; 1
 dfc:	66 0f       	add	r22, r22
 dfe:	77 1f       	adc	r23, r23
 e00:	88 1f       	adc	r24, r24
 e02:	da f7       	brpl	.-10     	; 0xdfa <log+0x1e>
 e04:	20 e0       	ldi	r18, 0x00	; 0
 e06:	30 e0       	ldi	r19, 0x00	; 0
 e08:	40 e8       	ldi	r20, 0x80	; 128
 e0a:	5f eb       	ldi	r21, 0xBF	; 191
 e0c:	9f e3       	ldi	r25, 0x3F	; 63
 e0e:	88 39       	cpi	r24, 0x98	; 152
 e10:	20 f0       	brcs	.+8      	; 0xe1a <log+0x3e>
 e12:	80 3e       	cpi	r24, 0xE0	; 224
 e14:	38 f0       	brcs	.+14     	; 0xe24 <log+0x48>
 e16:	21 96       	adiw	r28, 0x01	; 1
 e18:	8f 77       	andi	r24, 0x7F	; 127
 e1a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__addsf3>
 e1e:	ec e7       	ldi	r30, 0x7C	; 124
 e20:	f0 e0       	ldi	r31, 0x00	; 0
 e22:	04 c0       	rjmp	.+8      	; 0xe2c <log+0x50>
 e24:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__addsf3>
 e28:	e9 ea       	ldi	r30, 0xA9	; 169
 e2a:	f0 e0       	ldi	r31, 0x00	; 0
 e2c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__fp_powser>
 e30:	8b 01       	movw	r16, r22
 e32:	be 01       	movw	r22, r28
 e34:	ec 01       	movw	r28, r24
 e36:	fb 2e       	mov	r15, r27
 e38:	6f 57       	subi	r22, 0x7F	; 127
 e3a:	71 09       	sbc	r23, r1
 e3c:	75 95       	asr	r23
 e3e:	77 1f       	adc	r23, r23
 e40:	88 0b       	sbc	r24, r24
 e42:	99 0b       	sbc	r25, r25
 e44:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__floatsisf>
 e48:	28 e1       	ldi	r18, 0x18	; 24
 e4a:	32 e7       	ldi	r19, 0x72	; 114
 e4c:	41 e3       	ldi	r20, 0x31	; 49
 e4e:	5f e3       	ldi	r21, 0x3F	; 63
 e50:	0e 94 99 05 	call	0xb32	; 0xb32 <__mulsf3x>
 e54:	af 2d       	mov	r26, r15
 e56:	98 01       	movw	r18, r16
 e58:	ae 01       	movw	r20, r28
 e5a:	ff 90       	pop	r15
 e5c:	0f 91       	pop	r16
 e5e:	1f 91       	pop	r17
 e60:	cf 91       	pop	r28
 e62:	df 91       	pop	r29
 e64:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__addsf3x>
 e68:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <__fp_round>

00000e6c <modf>:
 e6c:	fa 01       	movw	r30, r20
 e6e:	dc 01       	movw	r26, r24
 e70:	aa 0f       	add	r26, r26
 e72:	bb 1f       	adc	r27, r27
 e74:	9b 01       	movw	r18, r22
 e76:	ac 01       	movw	r20, r24
 e78:	bf 57       	subi	r27, 0x7F	; 127
 e7a:	28 f4       	brcc	.+10     	; 0xe86 <modf+0x1a>
 e7c:	22 27       	eor	r18, r18
 e7e:	33 27       	eor	r19, r19
 e80:	44 27       	eor	r20, r20
 e82:	50 78       	andi	r21, 0x80	; 128
 e84:	20 c0       	rjmp	.+64     	; 0xec6 <modf+0x5a>
 e86:	b7 51       	subi	r27, 0x17	; 23
 e88:	90 f4       	brcc	.+36     	; 0xeae <modf+0x42>
 e8a:	ab 2f       	mov	r26, r27
 e8c:	00 24       	eor	r0, r0
 e8e:	46 95       	lsr	r20
 e90:	37 95       	ror	r19
 e92:	27 95       	ror	r18
 e94:	01 1c       	adc	r0, r1
 e96:	a3 95       	inc	r26
 e98:	d2 f3       	brmi	.-12     	; 0xe8e <modf+0x22>
 e9a:	00 20       	and	r0, r0
 e9c:	71 f0       	breq	.+28     	; 0xeba <modf+0x4e>
 e9e:	22 0f       	add	r18, r18
 ea0:	33 1f       	adc	r19, r19
 ea2:	44 1f       	adc	r20, r20
 ea4:	b3 95       	inc	r27
 ea6:	da f3       	brmi	.-10     	; 0xe9e <modf+0x32>
 ea8:	0e d0       	rcall	.+28     	; 0xec6 <modf+0x5a>
 eaa:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__subsf3>
 eae:	61 30       	cpi	r22, 0x01	; 1
 eb0:	71 05       	cpc	r23, r1
 eb2:	a0 e8       	ldi	r26, 0x80	; 128
 eb4:	8a 07       	cpc	r24, r26
 eb6:	b9 46       	sbci	r27, 0x69	; 105
 eb8:	30 f4       	brcc	.+12     	; 0xec6 <modf+0x5a>
 eba:	9b 01       	movw	r18, r22
 ebc:	ac 01       	movw	r20, r24
 ebe:	66 27       	eor	r22, r22
 ec0:	77 27       	eor	r23, r23
 ec2:	88 27       	eor	r24, r24
 ec4:	90 78       	andi	r25, 0x80	; 128
 ec6:	30 96       	adiw	r30, 0x00	; 0
 ec8:	21 f0       	breq	.+8      	; 0xed2 <modf+0x66>
 eca:	20 83       	st	Z, r18
 ecc:	31 83       	std	Z+1, r19	; 0x01
 ece:	42 83       	std	Z+2, r20	; 0x02
 ed0:	53 83       	std	Z+3, r21	; 0x03
 ed2:	08 95       	ret

00000ed4 <__fp_mpack>:
 ed4:	9f 3f       	cpi	r25, 0xFF	; 255
 ed6:	31 f0       	breq	.+12     	; 0xee4 <__fp_mpack_finite+0xc>

00000ed8 <__fp_mpack_finite>:
 ed8:	91 50       	subi	r25, 0x01	; 1
 eda:	20 f4       	brcc	.+8      	; 0xee4 <__fp_mpack_finite+0xc>
 edc:	87 95       	ror	r24
 ede:	77 95       	ror	r23
 ee0:	67 95       	ror	r22
 ee2:	b7 95       	ror	r27
 ee4:	88 0f       	add	r24, r24
 ee6:	91 1d       	adc	r25, r1
 ee8:	96 95       	lsr	r25
 eea:	87 95       	ror	r24
 eec:	97 f9       	bld	r25, 7
 eee:	08 95       	ret

00000ef0 <__divmodhi4>:
 ef0:	97 fb       	bst	r25, 7
 ef2:	07 2e       	mov	r0, r23
 ef4:	16 f4       	brtc	.+4      	; 0xefa <__divmodhi4+0xa>
 ef6:	00 94       	com	r0
 ef8:	07 d0       	rcall	.+14     	; 0xf08 <__divmodhi4_neg1>
 efa:	77 fd       	sbrc	r23, 7
 efc:	09 d0       	rcall	.+18     	; 0xf10 <__divmodhi4_neg2>
 efe:	0e 94 8c 07 	call	0xf18	; 0xf18 <__udivmodhi4>
 f02:	07 fc       	sbrc	r0, 7
 f04:	05 d0       	rcall	.+10     	; 0xf10 <__divmodhi4_neg2>
 f06:	3e f4       	brtc	.+14     	; 0xf16 <__divmodhi4_exit>

00000f08 <__divmodhi4_neg1>:
 f08:	90 95       	com	r25
 f0a:	81 95       	neg	r24
 f0c:	9f 4f       	sbci	r25, 0xFF	; 255
 f0e:	08 95       	ret

00000f10 <__divmodhi4_neg2>:
 f10:	70 95       	com	r23
 f12:	61 95       	neg	r22
 f14:	7f 4f       	sbci	r23, 0xFF	; 255

00000f16 <__divmodhi4_exit>:
 f16:	08 95       	ret

00000f18 <__udivmodhi4>:
 f18:	aa 1b       	sub	r26, r26
 f1a:	bb 1b       	sub	r27, r27
 f1c:	51 e1       	ldi	r21, 0x11	; 17
 f1e:	07 c0       	rjmp	.+14     	; 0xf2e <__udivmodhi4_ep>

00000f20 <__udivmodhi4_loop>:
 f20:	aa 1f       	adc	r26, r26
 f22:	bb 1f       	adc	r27, r27
 f24:	a6 17       	cp	r26, r22
 f26:	b7 07       	cpc	r27, r23
 f28:	10 f0       	brcs	.+4      	; 0xf2e <__udivmodhi4_ep>
 f2a:	a6 1b       	sub	r26, r22
 f2c:	b7 0b       	sbc	r27, r23

00000f2e <__udivmodhi4_ep>:
 f2e:	88 1f       	adc	r24, r24
 f30:	99 1f       	adc	r25, r25
 f32:	5a 95       	dec	r21
 f34:	a9 f7       	brne	.-22     	; 0xf20 <__udivmodhi4_loop>
 f36:	80 95       	com	r24
 f38:	90 95       	com	r25
 f3a:	bc 01       	movw	r22, r24
 f3c:	cd 01       	movw	r24, r26
 f3e:	08 95       	ret

00000f40 <_exit>:
 f40:	f8 94       	cli

00000f42 <__stop_program>:
 f42:	ff cf       	rjmp	.-2      	; 0xf42 <__stop_program>
