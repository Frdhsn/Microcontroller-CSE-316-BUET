
DotMatrix.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000396  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001a0  00800060  00000396  0000042a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000098  00800200  00800200  000005ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ab1  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d1  00000000  00000000  00001141  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000051d  00000000  00000000  00001812  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00001d30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d3  00000000  00000000  00001e74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000645  00000000  00000000  00002247  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000288c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e9       	ldi	r30, 0x96	; 150
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 30       	cpi	r26, 0x00	; 0
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b2 e0       	ldi	r27, 0x02	; 2
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 39       	cpi	r26, 0x98	; 152
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 86 01 	call	0x30c	; 0x30c <main>
  8a:	0c 94 c9 01 	jmp	0x392	; 0x392 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <initializeDisplayMatrix>:
			}
			_delay_ms(400);
		}
		
	}
}
  92:	e0 e9       	ldi	r30, 0x90	; 144
  94:	f2 e0       	ldi	r31, 0x02	; 2
  96:	80 e8       	ldi	r24, 0x80	; 128
  98:	80 83       	st	Z, r24
  9a:	80 e4       	ldi	r24, 0x40	; 64
  9c:	81 83       	std	Z+1, r24	; 0x01
  9e:	80 e2       	ldi	r24, 0x20	; 32
  a0:	82 83       	std	Z+2, r24	; 0x02
  a2:	80 e1       	ldi	r24, 0x10	; 16
  a4:	83 83       	std	Z+3, r24	; 0x03
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	84 83       	std	Z+4, r24	; 0x04
  aa:	84 e0       	ldi	r24, 0x04	; 4
  ac:	85 83       	std	Z+5, r24	; 0x05
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	86 83       	std	Z+6, r24	; 0x06
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	87 83       	std	Z+7, r24	; 0x07
  b6:	08 95       	ret

000000b8 <rotateLeftMatrix>:
  b8:	2f 92       	push	r2
  ba:	3f 92       	push	r3
  bc:	4f 92       	push	r4
  be:	5f 92       	push	r5
  c0:	6f 92       	push	r6
  c2:	7f 92       	push	r7
  c4:	8f 92       	push	r8
  c6:	9f 92       	push	r9
  c8:	af 92       	push	r10
  ca:	bf 92       	push	r11
  cc:	cf 92       	push	r12
  ce:	df 92       	push	r13
  d0:	ef 92       	push	r14
  d2:	ff 92       	push	r15
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	0f 2e       	mov	r0, r31
  de:	fe e1       	ldi	r31, 0x1E	; 30
  e0:	af 2e       	mov	r10, r31
  e2:	f2 e0       	ldi	r31, 0x02	; 2
  e4:	bf 2e       	mov	r11, r31
  e6:	f0 2d       	mov	r31, r0
  e8:	0f 2e       	mov	r0, r31
  ea:	f0 e8       	ldi	r31, 0x80	; 128
  ec:	8f 2e       	mov	r8, r31
  ee:	f2 e0       	ldi	r31, 0x02	; 2
  f0:	9f 2e       	mov	r9, r31
  f2:	f0 2d       	mov	r31, r0
  f4:	e1 2c       	mov	r14, r1
  f6:	f1 2c       	mov	r15, r1
  f8:	00 e0       	ldi	r16, 0x00	; 0
  fa:	10 e0       	ldi	r17, 0x00	; 0
  fc:	0f 2e       	mov	r0, r31
  fe:	f7 e0       	ldi	r31, 0x07	; 7
 100:	cf 2e       	mov	r12, r31
 102:	d1 2c       	mov	r13, r1
 104:	f0 2d       	mov	r31, r0
 106:	68 94       	set
 108:	66 24       	eor	r6, r6
 10a:	67 f8       	bld	r6, 7
 10c:	71 2c       	mov	r7, r1
 10e:	0f 2e       	mov	r0, r31
 110:	fe e7       	ldi	r31, 0x7E	; 126
 112:	4f 2e       	mov	r4, r31
 114:	51 2c       	mov	r5, r1
 116:	f0 2d       	mov	r31, r0
 118:	29 c0       	rjmp	.+82     	; 0x16c <rotateLeftMatrix+0xb4>
 11a:	ec 01       	movw	r28, r24
 11c:	28 81       	ld	r18, Y
 11e:	39 81       	ldd	r19, Y+1	; 0x01
 120:	40 81       	ld	r20, Z
 122:	51 81       	ldd	r21, Z+1	; 0x01
 124:	49 93       	st	Y+, r20
 126:	59 93       	st	Y+, r21
 128:	ce 01       	movw	r24, r28
 12a:	e1 01       	movw	r28, r2
 12c:	5a 91       	ld	r21, -Y
 12e:	4a 91       	ld	r20, -Y
 130:	1e 01       	movw	r2, r28
 132:	51 83       	std	Z+1, r21	; 0x01
 134:	40 83       	st	Z, r20
 136:	4d 91       	ld	r20, X+
 138:	5c 91       	ld	r21, X
 13a:	11 97       	sbiw	r26, 0x01	; 1
 13c:	59 83       	std	Y+1, r21	; 0x01
 13e:	48 83       	st	Y, r20
 140:	11 96       	adiw	r26, 0x01	; 1
 142:	3c 93       	st	X, r19
 144:	2e 93       	st	-X, r18
 146:	70 96       	adiw	r30, 0x10	; 16
 148:	50 97       	sbiw	r26, 0x10	; 16
 14a:	e6 17       	cp	r30, r22
 14c:	f7 07       	cpc	r31, r23
 14e:	29 f7       	brne	.-54     	; 0x11a <rotateLeftMatrix+0x62>
 150:	0f 5f       	subi	r16, 0xFF	; 255
 152:	1f 4f       	sbci	r17, 0xFF	; 255
 154:	de e0       	ldi	r29, 0x0E	; 14
 156:	ad 0e       	add	r10, r29
 158:	b1 1c       	adc	r11, r1
 15a:	22 e1       	ldi	r18, 0x12	; 18
 15c:	e2 0e       	add	r14, r18
 15e:	f1 1c       	adc	r15, r1
 160:	3e e0       	ldi	r19, 0x0E	; 14
 162:	83 1a       	sub	r8, r19
 164:	91 08       	sbc	r9, r1
 166:	04 30       	cpi	r16, 0x04	; 4
 168:	11 05       	cpc	r17, r1
 16a:	c1 f0       	breq	.+48     	; 0x19c <rotateLeftMatrix+0xe4>
 16c:	c6 01       	movw	r24, r12
 16e:	80 1b       	sub	r24, r16
 170:	91 0b       	sbc	r25, r17
 172:	08 17       	cp	r16, r24
 174:	19 07       	cpc	r17, r25
 176:	64 f7       	brge	.-40     	; 0x150 <rotateLeftMatrix+0x98>
 178:	c7 01       	movw	r24, r14
 17a:	80 5f       	subi	r24, 0xF0	; 240
 17c:	9d 4f       	sbci	r25, 0xFD	; 253
 17e:	e3 01       	movw	r28, r6
 180:	ce 19       	sub	r28, r14
 182:	df 09       	sbc	r29, r15
 184:	9e 01       	movw	r18, r28
 186:	20 5f       	subi	r18, 0xF0	; 240
 188:	3d 4f       	sbci	r19, 0xFD	; 253
 18a:	19 01       	movw	r2, r18
 18c:	b2 01       	movw	r22, r4
 18e:	6e 19       	sub	r22, r14
 190:	7f 09       	sbc	r23, r15
 192:	60 5f       	subi	r22, 0xF0	; 240
 194:	7d 4f       	sbci	r23, 0xFD	; 253
 196:	d4 01       	movw	r26, r8
 198:	f5 01       	movw	r30, r10
 19a:	bf cf       	rjmp	.-130    	; 0x11a <rotateLeftMatrix+0x62>
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	ff 90       	pop	r15
 1a6:	ef 90       	pop	r14
 1a8:	df 90       	pop	r13
 1aa:	cf 90       	pop	r12
 1ac:	bf 90       	pop	r11
 1ae:	af 90       	pop	r10
 1b0:	9f 90       	pop	r9
 1b2:	8f 90       	pop	r8
 1b4:	7f 90       	pop	r7
 1b6:	6f 90       	pop	r6
 1b8:	5f 90       	pop	r5
 1ba:	4f 90       	pop	r4
 1bc:	3f 90       	pop	r3
 1be:	2f 90       	pop	r2
 1c0:	08 95       	ret

000001c2 <makeMatrix>:
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	a0 e0       	ldi	r26, 0x00	; 0
 1c8:	b2 e0       	ldi	r27, 0x02	; 2
 1ca:	60 e1       	ldi	r22, 0x10	; 16
 1cc:	72 e0       	ldi	r23, 0x02	; 2
 1ce:	c0 e9       	ldi	r28, 0x90	; 144
 1d0:	d2 e0       	ldi	r29, 0x02	; 2
 1d2:	12 c0       	rjmp	.+36     	; 0x1f8 <makeMatrix+0x36>
 1d4:	9a 01       	movw	r18, r20
 1d6:	08 2e       	mov	r0, r24
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <makeMatrix+0x1c>
 1da:	35 95       	asr	r19
 1dc:	27 95       	ror	r18
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <makeMatrix+0x18>
 1e2:	21 70       	andi	r18, 0x01	; 1
 1e4:	33 27       	eor	r19, r19
 1e6:	21 93       	st	Z+, r18
 1e8:	31 93       	st	Z+, r19
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	98 f7       	brcc	.-26     	; 0x1d4 <makeMatrix+0x12>
 1ee:	60 5f       	subi	r22, 0xF0	; 240
 1f0:	7f 4f       	sbci	r23, 0xFF	; 255
 1f2:	6c 17       	cp	r22, r28
 1f4:	7d 07       	cpc	r23, r29
 1f6:	31 f0       	breq	.+12     	; 0x204 <makeMatrix+0x42>
 1f8:	4d 91       	ld	r20, X+
 1fa:	5d 91       	ld	r21, X+
 1fc:	fb 01       	movw	r30, r22
 1fe:	87 e0       	ldi	r24, 0x07	; 7
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	e8 cf       	rjmp	.-48     	; 0x1d4 <makeMatrix+0x12>
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	08 95       	ret

0000020a <makeSymbol>:
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	60 e0       	ldi	r22, 0x00	; 0
 214:	72 e0       	ldi	r23, 0x02	; 2
 216:	a0 e1       	ldi	r26, 0x10	; 16
 218:	b2 e0       	ldi	r27, 0x02	; 2
 21a:	00 e1       	ldi	r16, 0x10	; 16
 21c:	12 e0       	ldi	r17, 0x02	; 2
 21e:	eb 01       	movw	r28, r22
 220:	fd 01       	movw	r30, r26
 222:	87 e0       	ldi	r24, 0x07	; 7
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	40 e0       	ldi	r20, 0x00	; 0
 228:	50 e0       	ldi	r21, 0x00	; 0
 22a:	21 91       	ld	r18, Z+
 22c:	31 91       	ld	r19, Z+
 22e:	08 2e       	mov	r0, r24
 230:	02 c0       	rjmp	.+4      	; 0x236 <makeSymbol+0x2c>
 232:	22 0f       	add	r18, r18
 234:	33 1f       	adc	r19, r19
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <makeSymbol+0x28>
 23a:	42 2b       	or	r20, r18
 23c:	53 2b       	or	r21, r19
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	a0 f7       	brcc	.-24     	; 0x22a <makeSymbol+0x20>
 242:	59 83       	std	Y+1, r21	; 0x01
 244:	48 83       	st	Y, r20
 246:	6e 5f       	subi	r22, 0xFE	; 254
 248:	7f 4f       	sbci	r23, 0xFF	; 255
 24a:	50 96       	adiw	r26, 0x10	; 16
 24c:	60 17       	cp	r22, r16
 24e:	71 07       	cpc	r23, r17
 250:	31 f7       	brne	.-52     	; 0x21e <makeSymbol+0x14>
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	08 95       	ret

0000025c <drawSymbol>:
 25c:	ef 92       	push	r14
 25e:	ff 92       	push	r15
 260:	0f 93       	push	r16
 262:	1f 93       	push	r17
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	c6 2f       	mov	r28, r22
 26a:	d4 2f       	mov	r29, r20
 26c:	dc 01       	movw	r26, r24
 26e:	0f 2e       	mov	r0, r31
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	ef 2e       	mov	r14, r31
 274:	f2 e0       	ldi	r31, 0x02	; 2
 276:	ff 2e       	mov	r15, r31
 278:	f0 2d       	mov	r31, r0
 27a:	00 e1       	ldi	r16, 0x10	; 16
 27c:	12 e0       	ldi	r17, 0x02	; 2
 27e:	f7 01       	movw	r30, r14
 280:	8d 91       	ld	r24, X+
 282:	9d 91       	ld	r25, X+
 284:	81 93       	st	Z+, r24
 286:	91 93       	st	Z+, r25
 288:	e0 17       	cp	r30, r16
 28a:	f1 07       	cpc	r31, r17
 28c:	c9 f7       	brne	.-14     	; 0x280 <drawSymbol+0x24>
 28e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <makeMatrix>
 292:	dc 36       	cpi	r29, 0x6C	; 108
 294:	49 f0       	breq	.+18     	; 0x2a8 <drawSymbol+0x4c>
 296:	d2 37       	cpi	r29, 0x72	; 114
 298:	19 f0       	breq	.+6      	; 0x2a0 <drawSymbol+0x44>
 29a:	d4 36       	cpi	r29, 0x64	; 100
 29c:	39 f4       	brne	.+14     	; 0x2ac <drawSymbol+0x50>
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <drawSymbol+0x48>
 2a0:	0e 94 5c 00 	call	0xb8	; 0xb8 <rotateLeftMatrix>
 2a4:	0e 94 5c 00 	call	0xb8	; 0xb8 <rotateLeftMatrix>
 2a8:	0e 94 5c 00 	call	0xb8	; 0xb8 <rotateLeftMatrix>
 2ac:	0e 94 05 01 	call	0x20a	; 0x20a <makeSymbol>
 2b0:	28 ec       	ldi	r18, 0xC8	; 200
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	9f ef       	ldi	r25, 0xFF	; 255
 2b6:	1f c0       	rjmp	.+62     	; 0x2f6 <drawSymbol+0x9a>
 2b8:	c7 36       	cpi	r28, 0x67	; 103
 2ba:	29 f4       	brne	.+10     	; 0x2c6 <drawSymbol+0x6a>
 2bc:	80 81       	ld	r24, Z
 2be:	80 95       	com	r24
 2c0:	8b bb       	out	0x1b, r24	; 27
 2c2:	92 bb       	out	0x12, r25	; 18
 2c4:	0b c0       	rjmp	.+22     	; 0x2dc <drawSymbol+0x80>
 2c6:	c2 37       	cpi	r28, 0x72	; 114
 2c8:	29 f4       	brne	.+10     	; 0x2d4 <drawSymbol+0x78>
 2ca:	9b bb       	out	0x1b, r25	; 27
 2cc:	80 81       	ld	r24, Z
 2ce:	80 95       	com	r24
 2d0:	82 bb       	out	0x12, r24	; 18
 2d2:	04 c0       	rjmp	.+8      	; 0x2dc <drawSymbol+0x80>
 2d4:	80 81       	ld	r24, Z
 2d6:	80 95       	com	r24
 2d8:	82 bb       	out	0x12, r24	; 18
 2da:	8b bb       	out	0x1b, r24	; 27
 2dc:	8d 91       	ld	r24, X+
 2de:	88 bb       	out	0x18, r24	; 24
 2e0:	82 e4       	ldi	r24, 0x42	; 66
 2e2:	8a 95       	dec	r24
 2e4:	f1 f7       	brne	.-4      	; 0x2e2 <drawSymbol+0x86>
 2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <drawSymbol+0x8c>
 2e8:	32 96       	adiw	r30, 0x02	; 2
 2ea:	e0 17       	cp	r30, r16
 2ec:	f1 07       	cpc	r31, r17
 2ee:	21 f7       	brne	.-56     	; 0x2b8 <drawSymbol+0x5c>
 2f0:	21 50       	subi	r18, 0x01	; 1
 2f2:	31 09       	sbc	r19, r1
 2f4:	21 f0       	breq	.+8      	; 0x2fe <drawSymbol+0xa2>
 2f6:	a0 e9       	ldi	r26, 0x90	; 144
 2f8:	b2 e0       	ldi	r27, 0x02	; 2
 2fa:	f7 01       	movw	r30, r14
 2fc:	dd cf       	rjmp	.-70     	; 0x2b8 <drawSymbol+0x5c>
 2fe:	df 91       	pop	r29
 300:	cf 91       	pop	r28
 302:	1f 91       	pop	r17
 304:	0f 91       	pop	r16
 306:	ff 90       	pop	r15
 308:	ef 90       	pop	r14
 30a:	08 95       	ret

0000030c <main>:


int main(void)
{

	DDRA  = 0xFF; // red
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	8a bb       	out	0x1a, r24	; 26
	DDRB  = 0xFF; // row
 310:	87 bb       	out	0x17, r24	; 23
	DDRD  = 0xFF; // green
 312:	81 bb       	out	0x11, r24	; 17
	

	
	initializeDisplayMatrix();
 314:	0e 94 49 00 	call	0x92	; 0x92 <initializeDisplayMatrix>
	while(1)
	{
		//loadLedMatrix(GREEN_COLOR);
		drawSymbol(ALPHA['A'-'A'],GREEN_COLOR,UP);
 318:	45 e7       	ldi	r20, 0x75	; 117
 31a:	67 e6       	ldi	r22, 0x67	; 103
 31c:	80 e6       	ldi	r24, 0x60	; 96
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	0e 94 2e 01 	call	0x25c	; 0x25c <drawSymbol>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 324:	2f e3       	ldi	r18, 0x3F	; 63
 326:	8d e0       	ldi	r24, 0x0D	; 13
 328:	93 e0       	ldi	r25, 0x03	; 3
 32a:	21 50       	subi	r18, 0x01	; 1
 32c:	80 40       	sbci	r24, 0x00	; 0
 32e:	90 40       	sbci	r25, 0x00	; 0
 330:	e1 f7       	brne	.-8      	; 0x32a <main+0x1e>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x28>
 334:	00 00       	nop
		_delay_ms(1000);
		drawSymbol(ALPHA['A'-'A'],GREEN_COLOR,LEFT);
 336:	4c e6       	ldi	r20, 0x6C	; 108
 338:	67 e6       	ldi	r22, 0x67	; 103
 33a:	80 e6       	ldi	r24, 0x60	; 96
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	0e 94 2e 01 	call	0x25c	; 0x25c <drawSymbol>
 342:	2f e3       	ldi	r18, 0x3F	; 63
 344:	8d e0       	ldi	r24, 0x0D	; 13
 346:	93 e0       	ldi	r25, 0x03	; 3
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <main+0x3c>
 350:	00 c0       	rjmp	.+0      	; 0x352 <main+0x46>
 352:	00 00       	nop
		_delay_ms(1000);
		drawSymbol(ALPHA['A'-'A'],GREEN_COLOR,DOWN);
 354:	44 e6       	ldi	r20, 0x64	; 100
 356:	67 e6       	ldi	r22, 0x67	; 103
 358:	80 e6       	ldi	r24, 0x60	; 96
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 2e 01 	call	0x25c	; 0x25c <drawSymbol>
 360:	2f e3       	ldi	r18, 0x3F	; 63
 362:	8d e0       	ldi	r24, 0x0D	; 13
 364:	93 e0       	ldi	r25, 0x03	; 3
 366:	21 50       	subi	r18, 0x01	; 1
 368:	80 40       	sbci	r24, 0x00	; 0
 36a:	90 40       	sbci	r25, 0x00	; 0
 36c:	e1 f7       	brne	.-8      	; 0x366 <main+0x5a>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x64>
 370:	00 00       	nop
		_delay_ms(1000);
		drawSymbol(ALPHA['A'-'A'],GREEN_COLOR,RIGHT);
 372:	42 e7       	ldi	r20, 0x72	; 114
 374:	67 e6       	ldi	r22, 0x67	; 103
 376:	80 e6       	ldi	r24, 0x60	; 96
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 94 2e 01 	call	0x25c	; 0x25c <drawSymbol>
 37e:	2f e3       	ldi	r18, 0x3F	; 63
 380:	8d e0       	ldi	r24, 0x0D	; 13
 382:	93 e0       	ldi	r25, 0x03	; 3
 384:	21 50       	subi	r18, 0x01	; 1
 386:	80 40       	sbci	r24, 0x00	; 0
 388:	90 40       	sbci	r25, 0x00	; 0
 38a:	e1 f7       	brne	.-8      	; 0x384 <main+0x78>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <main+0x82>
 38e:	00 00       	nop
 390:	c3 cf       	rjmp	.-122    	; 0x318 <main+0xc>

00000392 <_exit>:
 392:	f8 94       	cli

00000394 <__stop_program>:
 394:	ff cf       	rjmp	.-2      	; 0x394 <__stop_program>
