
AudioToFreqSpectrum.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  00000d6c  00000e00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001a3  0080007e  0080007e  00000e1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019ff  00000000  00000000  00000fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e7  00000000  00000000  000029bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d2a  00000000  00000000  000031a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b4  00000000  00000000  00003ed0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000547  00000000  00000000  00004284  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001383  00000000  00000000  000047cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005b4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <__vector_7>
  20:	0c 94 9c 02 	jmp	0x538	; 0x538 <__vector_8>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e6       	ldi	r30, 0x6C	; 108
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	ae e7       	ldi	r26, 0x7E	; 126
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 32       	cpi	r26, 0x21	; 33
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <main>
  8a:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
	for (u=1; u<N_SAMPLE_POINTS/2; u++) {
		if(Pc[u][0]<0)Pc[u][REAL]*=-1;
		if(Pc[u][1]<0)Pc[u][IMG]*=-1;
		P[u] = (Pc[u][REAL] + Pc[u][IMG])/4;//(uint8_t)
	}
}
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd8_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd8_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	8e e1       	ldi	r24, 0x1E	; 30
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd8_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	8e e1       	ldi	r24, 0x1E	; 30
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd8_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	8f e1       	ldi	r24, 0x1F	; 31
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd8_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	8f e1       	ldi	r24, 0x1F	; 31
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd8_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	80 e2       	ldi	r24, 0x20	; 32
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd8_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	80 e2       	ldi	r24, 0x20	; 32
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd8_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	81 e2       	ldi	r24, 0x21	; 33
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd8_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	81 e2       	ldi	r24, 0x21	; 33
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	c4 ff       	sbrs	r28, 4
 390:	07 c0       	rjmp	.+14     	; 0x3a0 <Lcd8_Port+0x8e>
 392:	61 e0       	ldi	r22, 0x01	; 1
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	82 e2       	ldi	r24, 0x22	; 34
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 39e:	06 c0       	rjmp	.+12     	; 0x3ac <Lcd8_Port+0x9a>
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	82 e2       	ldi	r24, 0x22	; 34
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3ac:	c5 ff       	sbrs	r28, 5
 3ae:	07 c0       	rjmp	.+14     	; 0x3be <Lcd8_Port+0xac>
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	83 e2       	ldi	r24, 0x23	; 35
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3bc:	06 c0       	rjmp	.+12     	; 0x3ca <Lcd8_Port+0xb8>
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	83 e2       	ldi	r24, 0x23	; 35
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3ca:	c6 ff       	sbrs	r28, 6
 3cc:	07 c0       	rjmp	.+14     	; 0x3dc <Lcd8_Port+0xca>
 3ce:	61 e0       	ldi	r22, 0x01	; 1
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	84 e2       	ldi	r24, 0x24	; 36
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3da:	06 c0       	rjmp	.+12     	; 0x3e8 <Lcd8_Port+0xd6>
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	84 e2       	ldi	r24, 0x24	; 36
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3e8:	cc 23       	and	r28, r28
 3ea:	3c f4       	brge	.+14     	; 0x3fa <Lcd8_Port+0xe8>
 3ec:	61 e0       	ldi	r22, 0x01	; 1
 3ee:	70 e0       	ldi	r23, 0x00	; 0
 3f0:	85 e2       	ldi	r24, 0x25	; 37
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3f8:	06 c0       	rjmp	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	70 e0       	ldi	r23, 0x00	; 0
 3fe:	85 e2       	ldi	r24, 0x25	; 37
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 406:	cf 91       	pop	r28
 408:	08 95       	ret

0000040a <Lcd8_Cmd>:
 40a:	cf 93       	push	r28
 40c:	c8 2f       	mov	r28, r24
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	8a e1       	ldi	r24, 0x1A	; 26
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 41a:	8c 2f       	mov	r24, r28
 41c:	0e 94 89 01 	call	0x312	; 0x312 <Lcd8_Port>
 420:	61 e0       	ldi	r22, 0x01	; 1
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	8b e1       	ldi	r24, 0x1B	; 27
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 42c:	89 ef       	ldi	r24, 0xF9	; 249
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <Lcd8_Cmd+0x26>
 434:	00 c0       	rjmp	.+0      	; 0x436 <Lcd8_Cmd+0x2c>
 436:	00 00       	nop
 438:	60 e0       	ldi	r22, 0x00	; 0
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	8b e1       	ldi	r24, 0x1B	; 27
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 444:	89 ef       	ldi	r24, 0xF9	; 249
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	01 97       	sbiw	r24, 0x01	; 1
 44a:	f1 f7       	brne	.-4      	; 0x448 <Lcd8_Cmd+0x3e>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <Lcd8_Cmd+0x44>
 44e:	00 00       	nop
 450:	cf 91       	pop	r28
 452:	08 95       	ret

00000454 <Lcd8_Clear>:
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 45a:	08 95       	ret

0000045c <Lcd8_Init>:
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	8a e1       	ldi	r24, 0x1A	; 26
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 468:	60 e0       	ldi	r22, 0x00	; 0
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	8b e1       	ldi	r24, 0x1B	; 27
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 474:	87 e8       	ldi	r24, 0x87	; 135
 476:	93 e1       	ldi	r25, 0x13	; 19
 478:	01 97       	sbiw	r24, 0x01	; 1
 47a:	f1 f7       	brne	.-4      	; 0x478 <Lcd8_Init+0x1c>
 47c:	00 c0       	rjmp	.+0      	; 0x47e <Lcd8_Init+0x22>
 47e:	00 00       	nop
 480:	80 e3       	ldi	r24, 0x30	; 48
 482:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 486:	81 ee       	ldi	r24, 0xE1	; 225
 488:	94 e0       	ldi	r25, 0x04	; 4
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <Lcd8_Init+0x2e>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <Lcd8_Init+0x34>
 490:	00 00       	nop
 492:	80 e3       	ldi	r24, 0x30	; 48
 494:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 498:	89 ef       	ldi	r24, 0xF9	; 249
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <Lcd8_Init+0x40>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <Lcd8_Init+0x46>
 4a2:	00 00       	nop
 4a4:	80 e3       	ldi	r24, 0x30	; 48
 4a6:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 4aa:	83 ec       	ldi	r24, 0xC3	; 195
 4ac:	99 e0       	ldi	r25, 0x09	; 9
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <Lcd8_Init+0x52>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <Lcd8_Init+0x58>
 4b4:	00 00       	nop
 4b6:	88 e3       	ldi	r24, 0x38	; 56
 4b8:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 4bc:	8c e0       	ldi	r24, 0x0C	; 12
 4be:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 4c8:	86 e0       	ldi	r24, 0x06	; 6
 4ca:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
 4ce:	08 95       	ret

000004d0 <Lcd8_Write_Char>:
 4d0:	cf 93       	push	r28
 4d2:	c8 2f       	mov	r28, r24
 4d4:	61 e0       	ldi	r22, 0x01	; 1
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	8a e1       	ldi	r24, 0x1A	; 26
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4e0:	8c 2f       	mov	r24, r28
 4e2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd8_Port>
 4e6:	61 e0       	ldi	r22, 0x01	; 1
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	8b e1       	ldi	r24, 0x1B	; 27
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4f2:	89 ef       	ldi	r24, 0xF9	; 249
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <Lcd8_Write_Char+0x26>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <Lcd8_Write_Char+0x2c>
 4fc:	00 00       	nop
 4fe:	60 e0       	ldi	r22, 0x00	; 0
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	8b e1       	ldi	r24, 0x1B	; 27
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 50a:	89 ef       	ldi	r24, 0xF9	; 249
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	01 97       	sbiw	r24, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <Lcd8_Write_Char+0x3e>
 512:	00 c0       	rjmp	.+0      	; 0x514 <Lcd8_Write_Char+0x44>
 514:	00 00       	nop
 516:	cf 91       	pop	r28
 518:	08 95       	ret

0000051a <Lcd8_Write_String>:
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	ec 01       	movw	r28, r24
 520:	88 81       	ld	r24, Y
 522:	88 23       	and	r24, r24
 524:	31 f0       	breq	.+12     	; 0x532 <Lcd8_Write_String+0x18>
 526:	21 96       	adiw	r28, 0x01	; 1
 528:	0e 94 68 02 	call	0x4d0	; 0x4d0 <Lcd8_Write_Char>
 52c:	89 91       	ld	r24, Y+
 52e:	81 11       	cpse	r24, r1
 530:	fb cf       	rjmp	.-10     	; 0x528 <Lcd8_Write_String+0xe>
 532:	df 91       	pop	r29
 534:	cf 91       	pop	r28
 536:	08 95       	ret

00000538 <__vector_8>:



ISR(TIMER1_COMPB_vect, ISR_NAKED)
{
	sei();
 538:	78 94       	sei
	sleep_cpu();
 53a:	88 95       	sleep
	reti();
 53c:	18 95       	reti

0000053e <adcConfig>:


int adcCycDur=0;
void adcConfig()
{
	ADMUX = (((0<<REFS1)|(1<<REFS0)|(1<<ADLAR))+0);
 53e:	80 e6       	ldi	r24, 0x60	; 96
 540:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1<<ADEN)+3;//prescaler=3 : div=8
 542:	83 e8       	ldi	r24, 0x83	; 131
 544:	86 b9       	out	0x06, r24	; 6
 546:	08 95       	ret

00000548 <timerConfig>:
	// adc clock = 1M/8 = 125KHz
	// adc sample Freq = 125/13 = 9KHz => time_req = 104us < sampling, hence ok
}

void timerConfig(){
	OCR1A = SAMPLING_CYCLE;
 548:	8d e7       	ldi	r24, 0x7D	; 125
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	9b bd       	out	0x2b, r25	; 43
 54e:	8a bd       	out	0x2a, r24	; 42
	OCR1B = SAMPLING_SLEEP_CYCLE;
 550:	89 e6       	ldi	r24, 0x69	; 105
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	99 bd       	out	0x29, r25	; 41
 556:	88 bd       	out	0x28, r24	; 40
	TCCR1A = 0;
 558:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1<<WGM12) | (1<<CS10);
 55a:	89 e0       	ldi	r24, 0x09	; 9
 55c:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1<<OCIE1A)|(1<<OCIE1B);
 55e:	88 e1       	ldi	r24, 0x18	; 24
 560:	89 bf       	out	0x39, r24	; 57
 562:	08 95       	ret

00000564 <initDataTables>:
}


void initDataTables()
{
	analogBuffIndex=0;
 564:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <analogBuffIndex>
 568:	e0 e8       	ldi	r30, 0x80	; 128
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	91 e0       	ldi	r25, 0x01	; 1
	//initializeSinCosTable();
	int i;
	forLoop(i,N_SAMPLE_POINTS)
	{
		analogTimeBuff[i]=0;
 570:	11 92       	st	Z+, r1
 572:	11 92       	st	Z+, r1
 574:	11 92       	st	Z+, r1
 576:	11 92       	st	Z+, r1
void initDataTables()
{
	analogBuffIndex=0;
	//initializeSinCosTable();
	int i;
	forLoop(i,N_SAMPLE_POINTS)
 578:	e8 17       	cp	r30, r24
 57a:	f9 07       	cpc	r31, r25
 57c:	c9 f7       	brne	.-14     	; 0x570 <initDataTables+0xc>
	{
		analogTimeBuff[i]=0;
	}
}
 57e:	08 95       	ret

00000580 <readAnalogValue>:
int readAnalogValue(int res)
{
	//adcCycDur=TCNT1;
	//while(ADCSRA&(1<<ADSC));
	//adcCycDur=TCNT1-adcCycDur;
	analogValue = ADCL;
 580:	24 b1       	in	r18, 0x04	; 4
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	30 93 9f 01 	sts	0x019F, r19	; 0x80019f <analogValue+0x1>
 588:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <analogValue>
	if(res==10)
 58c:	0a 97       	sbiw	r24, 0x0a	; 10
 58e:	a9 f4       	brne	.+42     	; 0x5ba <readAnalogValue+0x3a>
	analogValue = (analogValue>>6)|(ADCH<<2);
 590:	85 b1       	in	r24, 0x05	; 5
 592:	02 2e       	mov	r0, r18
 594:	23 2f       	mov	r18, r19
 596:	00 0c       	add	r0, r0
 598:	22 1f       	adc	r18, r18
 59a:	33 0b       	sbc	r19, r19
 59c:	00 0c       	add	r0, r0
 59e:	22 1f       	adc	r18, r18
 5a0:	33 1f       	adc	r19, r19
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	28 2b       	or	r18, r24
 5ae:	39 2b       	or	r19, r25
 5b0:	30 93 9f 01 	sts	0x019F, r19	; 0x80019f <analogValue+0x1>
 5b4:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <analogValue>
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <readAnalogValue+0x46>
	else
	analogValue = ADCH;
 5ba:	85 b1       	in	r24, 0x05	; 5
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <analogValue+0x1>
 5c2:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <analogValue>
	//ADCSRA |= (1<<ADSC);// start conversion
	return analogValue;
}
 5c6:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <analogValue>
 5ca:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <analogValue+0x1>
 5ce:	08 95       	ret

000005d0 <__vector_7>:
	sleep_cpu();
	reti();
}

int readAnalogValue(int res);
ISR (TIMER1_COMPA_vect) {
 5d0:	1f 92       	push	r1
 5d2:	0f 92       	push	r0
 5d4:	0f b6       	in	r0, 0x3f	; 63
 5d6:	0f 92       	push	r0
 5d8:	11 24       	eor	r1, r1
 5da:	2f 93       	push	r18
 5dc:	3f 93       	push	r19
 5de:	4f 93       	push	r20
 5e0:	5f 93       	push	r21
 5e2:	6f 93       	push	r22
 5e4:	7f 93       	push	r23
 5e6:	8f 93       	push	r24
 5e8:	9f 93       	push	r25
 5ea:	af 93       	push	r26
 5ec:	bf 93       	push	r27
 5ee:	cf 93       	push	r28
 5f0:	ef 93       	push	r30
 5f2:	ff 93       	push	r31
	if(analogBuffIndex<N_SAMPLE_POINTS) {
 5f4:	c0 91 a0 01 	lds	r28, 0x01A0	; 0x8001a0 <analogBuffIndex>
 5f8:	c0 32       	cpi	r28, 0x20	; 32
 5fa:	08 f0       	brcs	.+2      	; 0x5fe <__vector_7+0x2e>
 5fc:	4a c0       	rjmp	.+148    	; 0x692 <__vector_7+0xc2>
		//while(ADCSRA&(1<<ADSC));
		analogTimeBuff[analogBuffIndex++]=readAnalogValue(8);//-OFFSET_DC_8BIT;
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	8c 0f       	add	r24, r28
 602:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <analogBuffIndex>
 606:	88 e0       	ldi	r24, 0x08	; 8
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	0e 94 c0 02 	call	0x580	; 0x580 <readAnalogValue>
 60e:	ec 2f       	mov	r30, r28
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	ee 0f       	add	r30, r30
 614:	ff 1f       	adc	r31, r31
 616:	ee 0f       	add	r30, r30
 618:	ff 1f       	adc	r31, r31
 61a:	e0 58       	subi	r30, 0x80	; 128
 61c:	ff 4f       	sbci	r31, 0xFF	; 255
 61e:	09 2e       	mov	r0, r25
 620:	00 0c       	add	r0, r0
 622:	aa 0b       	sbc	r26, r26
 624:	bb 0b       	sbc	r27, r27
 626:	80 83       	st	Z, r24
 628:	91 83       	std	Z+1, r25	; 0x01
 62a:	a2 83       	std	Z+2, r26	; 0x02
 62c:	b3 83       	std	Z+3, r27	; 0x03
		if(analogTimeBuff[analogBuffIndex-1]>maxV) maxV = analogTimeBuff[analogBuffIndex-1];
 62e:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <analogBuffIndex>
 632:	f0 e0       	ldi	r31, 0x00	; 0
 634:	ee 0f       	add	r30, r30
 636:	ff 1f       	adc	r31, r31
 638:	ee 0f       	add	r30, r30
 63a:	ff 1f       	adc	r31, r31
 63c:	e4 58       	subi	r30, 0x84	; 132
 63e:	ff 4f       	sbci	r31, 0xFF	; 255
 640:	40 81       	ld	r20, Z
 642:	51 81       	ldd	r21, Z+1	; 0x01
 644:	62 81       	ldd	r22, Z+2	; 0x02
 646:	73 81       	ldd	r23, Z+3	; 0x03
 648:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 64c:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <__data_end+0x1>
 650:	09 2e       	mov	r0, r25
 652:	00 0c       	add	r0, r0
 654:	aa 0b       	sbc	r26, r26
 656:	bb 0b       	sbc	r27, r27
 658:	84 17       	cp	r24, r20
 65a:	95 07       	cpc	r25, r21
 65c:	a6 07       	cpc	r26, r22
 65e:	b7 07       	cpc	r27, r23
 660:	24 f4       	brge	.+8      	; 0x66a <__vector_7+0x9a>
 662:	50 93 7f 00 	sts	0x007F, r21	; 0x80007f <__data_end+0x1>
 666:	40 93 7e 00 	sts	0x007E, r20	; 0x80007e <__data_end>
		if(analogTimeBuff[analogBuffIndex-1]<minV) minV = analogTimeBuff[analogBuffIndex-1];
 66a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 66e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 672:	09 2e       	mov	r0, r25
 674:	00 0c       	add	r0, r0
 676:	aa 0b       	sbc	r26, r26
 678:	bb 0b       	sbc	r27, r27
 67a:	48 17       	cp	r20, r24
 67c:	59 07       	cpc	r21, r25
 67e:	6a 07       	cpc	r22, r26
 680:	7b 07       	cpc	r23, r27
 682:	24 f4       	brge	.+8      	; 0x68c <__vector_7+0xbc>
 684:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__data_start+0x1>
 688:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__data_start>
		//Lcd8_Set_Cursor(1,0);
		//sprintf(lcdStringBuff,"val : %ld",analogTimeBuff[analogBuffIndex-1]);
		//sprintf(lcdStringBuff,"%u",analogBuffIndex);
		//Lcd8_Write_String(lcdStringBuff);

		ADCSRA |= (1<<ADSC);
 68c:	36 9a       	sbi	0x06, 6	; 6
		TCNT1=0;//reset the timer for next time
 68e:	1d bc       	out	0x2d, r1	; 45
 690:	1c bc       	out	0x2c, r1	; 44
		// must be removed
		//_delay_us(10);// to show diff of voltages with time
	}
}
 692:	ff 91       	pop	r31
 694:	ef 91       	pop	r30
 696:	cf 91       	pop	r28
 698:	bf 91       	pop	r27
 69a:	af 91       	pop	r26
 69c:	9f 91       	pop	r25
 69e:	8f 91       	pop	r24
 6a0:	7f 91       	pop	r23
 6a2:	6f 91       	pop	r22
 6a4:	5f 91       	pop	r21
 6a6:	4f 91       	pop	r20
 6a8:	3f 91       	pop	r19
 6aa:	2f 91       	pop	r18
 6ac:	0f 90       	pop	r0
 6ae:	0f be       	out	0x3f, r0	; 63
 6b0:	0f 90       	pop	r0
 6b2:	1f 90       	pop	r1
 6b4:	18 95       	reti

000006b6 <main>:
}


int main(void)
{
	DDRD = 0xFF;
 6b6:	8f ef       	ldi	r24, 0xFF	; 255
 6b8:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 6ba:	84 bb       	out	0x14, r24	; 20


	
	adcConfig();
 6bc:	0e 94 9f 02 	call	0x53e	; 0x53e <adcConfig>
	timerConfig();
 6c0:	0e 94 a4 02 	call	0x548	; 0x548 <timerConfig>
	Lcd8_Init();
 6c4:	0e 94 2e 02 	call	0x45c	; 0x45c <Lcd8_Init>
	initDataTables();
 6c8:	0e 94 b2 02 	call	0x564	; 0x564 <initDataTables>
	sei();
 6cc:	78 94       	sei
	set_sleep_mode(SLEEP_MODE_IDLE);
 6ce:	85 b7       	in	r24, 0x35	; 53
 6d0:	8f 78       	andi	r24, 0x8F	; 143
 6d2:	85 bf       	out	0x35, r24	; 53
	sleep_enable();
 6d4:	85 b7       	in	r24, 0x35	; 53
 6d6:	80 68       	ori	r24, 0x80	; 128
 6d8:	85 bf       	out	0x35, r24	; 53
	ADCSRA |= (1<<ADSC);// start conversion
 6da:	36 9a       	sbi	0x06, 6	; 6
	TCNT1 = 0;
 6dc:	1d bc       	out	0x2d, r1	; 45
 6de:	1c bc       	out	0x2c, r1	; 44
		//_delay_ms(1000);

		if(analogBuffIndex==N_SAMPLE_POINTS){
			Lcd8_Clear();
			Lcd8_Set_Cursor(1,0);
			sprintf(lcdStringBuff,"MAX : %d  %ld",maxV,analogTimeBuff[0]);
 6e0:	c0 e8       	ldi	r28, 0x80	; 128
 6e2:	d0 e0       	ldi	r29, 0x00	; 0
 6e4:	0f 2e       	mov	r0, r31
 6e6:	f2 e6       	ldi	r31, 0x62	; 98
 6e8:	cf 2e       	mov	r12, r31
 6ea:	f0 e0       	ldi	r31, 0x00	; 0
 6ec:	df 2e       	mov	r13, r31
 6ee:	f0 2d       	mov	r31, r0
 6f0:	00 e8       	ldi	r16, 0x80	; 128
 6f2:	11 e0       	ldi	r17, 0x01	; 1
			//sprintf(lcdStringBuff,"%ld %ld %ld %ld",analogTimeBuff[0],analogTimeBuff[4],analogTimeBuff[8],analogTimeBuff[12]);
			Lcd8_Write_String(lcdStringBuff);
			Lcd8_Set_Cursor(2,0);
			sprintf(lcdStringBuff,"MIN : %d  %ld",minV,analogTimeBuff[0]);
 6f4:	0f 2e       	mov	r0, r31
 6f6:	f0 e7       	ldi	r31, 0x70	; 112
 6f8:	ef 2e       	mov	r14, r31
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	ff 2e       	mov	r15, r31
 6fe:	f0 2d       	mov	r31, r0
	ADCSRA |= (1<<ADSC);// start conversion
	TCNT1 = 0;
	//int x=0;
	while(1)
	{
		Lcd8_Clear();
 700:	0e 94 2a 02 	call	0x454	; 0x454 <Lcd8_Clear>
}

void Lcd8_Set_Cursor(char a, char b)
{
	if(a == 1)
	Lcd8_Cmd(0x80 + b);
 704:	80 e8       	ldi	r24, 0x80	; 128
 706:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
		//x+=1;
		//sprintf(lcdStringBuff,"%d",x);
		//Lcd8_Write_String("Here");
		//_delay_ms(1000);

		if(analogBuffIndex==N_SAMPLE_POINTS){
 70a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <analogBuffIndex>
 70e:	80 32       	cpi	r24, 0x20	; 32
 710:	b9 f7       	brne	.-18     	; 0x700 <main+0x4a>
			Lcd8_Clear();
 712:	0e 94 2a 02 	call	0x454	; 0x454 <Lcd8_Clear>
 716:	80 e8       	ldi	r24, 0x80	; 128
 718:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
			Lcd8_Set_Cursor(1,0);
			sprintf(lcdStringBuff,"MAX : %d  %ld",maxV,analogTimeBuff[0]);
 71c:	8b 81       	ldd	r24, Y+3	; 0x03
 71e:	8f 93       	push	r24
 720:	8a 81       	ldd	r24, Y+2	; 0x02
 722:	8f 93       	push	r24
 724:	89 81       	ldd	r24, Y+1	; 0x01
 726:	8f 93       	push	r24
 728:	88 81       	ld	r24, Y
 72a:	8f 93       	push	r24
 72c:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <__data_end+0x1>
 730:	8f 93       	push	r24
 732:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 736:	8f 93       	push	r24
 738:	df 92       	push	r13
 73a:	cf 92       	push	r12
 73c:	1f 93       	push	r17
 73e:	0f 93       	push	r16
 740:	0e 94 ca 03 	call	0x794	; 0x794 <sprintf>
			//sprintf(lcdStringBuff,"%ld %ld %ld %ld",analogTimeBuff[0],analogTimeBuff[4],analogTimeBuff[8],analogTimeBuff[12]);
			Lcd8_Write_String(lcdStringBuff);
 744:	c8 01       	movw	r24, r16
 746:	0e 94 8d 02 	call	0x51a	; 0x51a <Lcd8_Write_String>
	else if(a == 2)
	Lcd8_Cmd(0xC0 + b);
 74a:	80 ec       	ldi	r24, 0xC0	; 192
 74c:	0e 94 05 02 	call	0x40a	; 0x40a <Lcd8_Cmd>
			Lcd8_Set_Cursor(2,0);
			sprintf(lcdStringBuff,"MIN : %d  %ld",minV,analogTimeBuff[0]);
 750:	8b 81       	ldd	r24, Y+3	; 0x03
 752:	8f 93       	push	r24
 754:	8a 81       	ldd	r24, Y+2	; 0x02
 756:	8f 93       	push	r24
 758:	89 81       	ldd	r24, Y+1	; 0x01
 75a:	8f 93       	push	r24
 75c:	88 81       	ld	r24, Y
 75e:	8f 93       	push	r24
 760:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__data_start+0x1>
 764:	8f 93       	push	r24
 766:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 76a:	8f 93       	push	r24
 76c:	ff 92       	push	r15
 76e:	ef 92       	push	r14
 770:	1f 93       	push	r17
 772:	0f 93       	push	r16
 774:	0e 94 ca 03 	call	0x794	; 0x794 <sprintf>
			//sprintf(lcdStringBuff,"%ld %ld %ld",analogTimeBuff[16],analogTimeBuff[20],analogTimeBuff[24]);
			Lcd8_Write_String(lcdStringBuff);
 778:	c8 01       	movw	r24, r16
 77a:	0e 94 8d 02 	call	0x51a	; 0x51a <Lcd8_Write_String>
			analogBuffIndex=0;
 77e:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <analogBuffIndex>
 782:	8d b7       	in	r24, 0x3d	; 61
 784:	9e b7       	in	r25, 0x3e	; 62
 786:	44 96       	adiw	r24, 0x14	; 20
 788:	0f b6       	in	r0, 0x3f	; 63
 78a:	f8 94       	cli
 78c:	9e bf       	out	0x3e, r25	; 62
 78e:	0f be       	out	0x3f, r0	; 63
 790:	8d bf       	out	0x3d, r24	; 61
 792:	b6 cf       	rjmp	.-148    	; 0x700 <main+0x4a>

00000794 <sprintf>:
 794:	ae e0       	ldi	r26, 0x0E	; 14
 796:	b0 e0       	ldi	r27, 0x00	; 0
 798:	e0 ed       	ldi	r30, 0xD0	; 208
 79a:	f3 e0       	ldi	r31, 0x03	; 3
 79c:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__prologue_saves__+0x1c>
 7a0:	0d 89       	ldd	r16, Y+21	; 0x15
 7a2:	1e 89       	ldd	r17, Y+22	; 0x16
 7a4:	86 e0       	ldi	r24, 0x06	; 6
 7a6:	8c 83       	std	Y+4, r24	; 0x04
 7a8:	1a 83       	std	Y+2, r17	; 0x02
 7aa:	09 83       	std	Y+1, r16	; 0x01
 7ac:	8f ef       	ldi	r24, 0xFF	; 255
 7ae:	9f e7       	ldi	r25, 0x7F	; 127
 7b0:	9e 83       	std	Y+6, r25	; 0x06
 7b2:	8d 83       	std	Y+5, r24	; 0x05
 7b4:	ae 01       	movw	r20, r28
 7b6:	47 5e       	subi	r20, 0xE7	; 231
 7b8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ba:	6f 89       	ldd	r22, Y+23	; 0x17
 7bc:	78 8d       	ldd	r23, Y+24	; 0x18
 7be:	ce 01       	movw	r24, r28
 7c0:	01 96       	adiw	r24, 0x01	; 1
 7c2:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <vfprintf>
 7c6:	ef 81       	ldd	r30, Y+7	; 0x07
 7c8:	f8 85       	ldd	r31, Y+8	; 0x08
 7ca:	e0 0f       	add	r30, r16
 7cc:	f1 1f       	adc	r31, r17
 7ce:	10 82       	st	Z, r1
 7d0:	2e 96       	adiw	r28, 0x0e	; 14
 7d2:	e4 e0       	ldi	r30, 0x04	; 4
 7d4:	0c 94 a7 06 	jmp	0xd4e	; 0xd4e <__epilogue_restores__+0x1c>

000007d8 <vfprintf>:
 7d8:	ab e0       	ldi	r26, 0x0B	; 11
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	e2 ef       	ldi	r30, 0xF2	; 242
 7de:	f3 e0       	ldi	r31, 0x03	; 3
 7e0:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <__prologue_saves__>
 7e4:	6c 01       	movw	r12, r24
 7e6:	7b 01       	movw	r14, r22
 7e8:	8a 01       	movw	r16, r20
 7ea:	fc 01       	movw	r30, r24
 7ec:	17 82       	std	Z+7, r1	; 0x07
 7ee:	16 82       	std	Z+6, r1	; 0x06
 7f0:	83 81       	ldd	r24, Z+3	; 0x03
 7f2:	81 ff       	sbrs	r24, 1
 7f4:	cc c1       	rjmp	.+920    	; 0xb8e <__stack+0x32f>
 7f6:	ce 01       	movw	r24, r28
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	3c 01       	movw	r6, r24
 7fc:	f6 01       	movw	r30, r12
 7fe:	93 81       	ldd	r25, Z+3	; 0x03
 800:	f7 01       	movw	r30, r14
 802:	93 fd       	sbrc	r25, 3
 804:	85 91       	lpm	r24, Z+
 806:	93 ff       	sbrs	r25, 3
 808:	81 91       	ld	r24, Z+
 80a:	7f 01       	movw	r14, r30
 80c:	88 23       	and	r24, r24
 80e:	09 f4       	brne	.+2      	; 0x812 <vfprintf+0x3a>
 810:	ba c1       	rjmp	.+884    	; 0xb86 <__stack+0x327>
 812:	85 32       	cpi	r24, 0x25	; 37
 814:	39 f4       	brne	.+14     	; 0x824 <vfprintf+0x4c>
 816:	93 fd       	sbrc	r25, 3
 818:	85 91       	lpm	r24, Z+
 81a:	93 ff       	sbrs	r25, 3
 81c:	81 91       	ld	r24, Z+
 81e:	7f 01       	movw	r14, r30
 820:	85 32       	cpi	r24, 0x25	; 37
 822:	29 f4       	brne	.+10     	; 0x82e <vfprintf+0x56>
 824:	b6 01       	movw	r22, r12
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 82c:	e7 cf       	rjmp	.-50     	; 0x7fc <vfprintf+0x24>
 82e:	91 2c       	mov	r9, r1
 830:	21 2c       	mov	r2, r1
 832:	31 2c       	mov	r3, r1
 834:	ff e1       	ldi	r31, 0x1F	; 31
 836:	f3 15       	cp	r31, r3
 838:	d8 f0       	brcs	.+54     	; 0x870 <__stack+0x11>
 83a:	8b 32       	cpi	r24, 0x2B	; 43
 83c:	79 f0       	breq	.+30     	; 0x85c <vfprintf+0x84>
 83e:	38 f4       	brcc	.+14     	; 0x84e <vfprintf+0x76>
 840:	80 32       	cpi	r24, 0x20	; 32
 842:	79 f0       	breq	.+30     	; 0x862 <__stack+0x3>
 844:	83 32       	cpi	r24, 0x23	; 35
 846:	a1 f4       	brne	.+40     	; 0x870 <__stack+0x11>
 848:	23 2d       	mov	r18, r3
 84a:	20 61       	ori	r18, 0x10	; 16
 84c:	1d c0       	rjmp	.+58     	; 0x888 <__stack+0x29>
 84e:	8d 32       	cpi	r24, 0x2D	; 45
 850:	61 f0       	breq	.+24     	; 0x86a <__stack+0xb>
 852:	80 33       	cpi	r24, 0x30	; 48
 854:	69 f4       	brne	.+26     	; 0x870 <__stack+0x11>
 856:	23 2d       	mov	r18, r3
 858:	21 60       	ori	r18, 0x01	; 1
 85a:	16 c0       	rjmp	.+44     	; 0x888 <__stack+0x29>
 85c:	83 2d       	mov	r24, r3
 85e:	82 60       	ori	r24, 0x02	; 2
 860:	38 2e       	mov	r3, r24
 862:	e3 2d       	mov	r30, r3
 864:	e4 60       	ori	r30, 0x04	; 4
 866:	3e 2e       	mov	r3, r30
 868:	2a c0       	rjmp	.+84     	; 0x8be <__stack+0x5f>
 86a:	f3 2d       	mov	r31, r3
 86c:	f8 60       	ori	r31, 0x08	; 8
 86e:	1d c0       	rjmp	.+58     	; 0x8aa <__stack+0x4b>
 870:	37 fc       	sbrc	r3, 7
 872:	2d c0       	rjmp	.+90     	; 0x8ce <__stack+0x6f>
 874:	20 ed       	ldi	r18, 0xD0	; 208
 876:	28 0f       	add	r18, r24
 878:	2a 30       	cpi	r18, 0x0A	; 10
 87a:	40 f0       	brcs	.+16     	; 0x88c <__stack+0x2d>
 87c:	8e 32       	cpi	r24, 0x2E	; 46
 87e:	b9 f4       	brne	.+46     	; 0x8ae <__stack+0x4f>
 880:	36 fc       	sbrc	r3, 6
 882:	81 c1       	rjmp	.+770    	; 0xb86 <__stack+0x327>
 884:	23 2d       	mov	r18, r3
 886:	20 64       	ori	r18, 0x40	; 64
 888:	32 2e       	mov	r3, r18
 88a:	19 c0       	rjmp	.+50     	; 0x8be <__stack+0x5f>
 88c:	36 fe       	sbrs	r3, 6
 88e:	06 c0       	rjmp	.+12     	; 0x89c <__stack+0x3d>
 890:	8a e0       	ldi	r24, 0x0A	; 10
 892:	98 9e       	mul	r9, r24
 894:	20 0d       	add	r18, r0
 896:	11 24       	eor	r1, r1
 898:	92 2e       	mov	r9, r18
 89a:	11 c0       	rjmp	.+34     	; 0x8be <__stack+0x5f>
 89c:	ea e0       	ldi	r30, 0x0A	; 10
 89e:	2e 9e       	mul	r2, r30
 8a0:	20 0d       	add	r18, r0
 8a2:	11 24       	eor	r1, r1
 8a4:	22 2e       	mov	r2, r18
 8a6:	f3 2d       	mov	r31, r3
 8a8:	f0 62       	ori	r31, 0x20	; 32
 8aa:	3f 2e       	mov	r3, r31
 8ac:	08 c0       	rjmp	.+16     	; 0x8be <__stack+0x5f>
 8ae:	8c 36       	cpi	r24, 0x6C	; 108
 8b0:	21 f4       	brne	.+8      	; 0x8ba <__stack+0x5b>
 8b2:	83 2d       	mov	r24, r3
 8b4:	80 68       	ori	r24, 0x80	; 128
 8b6:	38 2e       	mov	r3, r24
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <__stack+0x5f>
 8ba:	88 36       	cpi	r24, 0x68	; 104
 8bc:	41 f4       	brne	.+16     	; 0x8ce <__stack+0x6f>
 8be:	f7 01       	movw	r30, r14
 8c0:	93 fd       	sbrc	r25, 3
 8c2:	85 91       	lpm	r24, Z+
 8c4:	93 ff       	sbrs	r25, 3
 8c6:	81 91       	ld	r24, Z+
 8c8:	7f 01       	movw	r14, r30
 8ca:	81 11       	cpse	r24, r1
 8cc:	b3 cf       	rjmp	.-154    	; 0x834 <vfprintf+0x5c>
 8ce:	98 2f       	mov	r25, r24
 8d0:	9f 7d       	andi	r25, 0xDF	; 223
 8d2:	95 54       	subi	r25, 0x45	; 69
 8d4:	93 30       	cpi	r25, 0x03	; 3
 8d6:	28 f4       	brcc	.+10     	; 0x8e2 <__stack+0x83>
 8d8:	0c 5f       	subi	r16, 0xFC	; 252
 8da:	1f 4f       	sbci	r17, 0xFF	; 255
 8dc:	9f e3       	ldi	r25, 0x3F	; 63
 8de:	99 83       	std	Y+1, r25	; 0x01
 8e0:	0d c0       	rjmp	.+26     	; 0x8fc <__stack+0x9d>
 8e2:	83 36       	cpi	r24, 0x63	; 99
 8e4:	31 f0       	breq	.+12     	; 0x8f2 <__stack+0x93>
 8e6:	83 37       	cpi	r24, 0x73	; 115
 8e8:	71 f0       	breq	.+28     	; 0x906 <__stack+0xa7>
 8ea:	83 35       	cpi	r24, 0x53	; 83
 8ec:	09 f0       	breq	.+2      	; 0x8f0 <__stack+0x91>
 8ee:	59 c0       	rjmp	.+178    	; 0x9a2 <__stack+0x143>
 8f0:	21 c0       	rjmp	.+66     	; 0x934 <__stack+0xd5>
 8f2:	f8 01       	movw	r30, r16
 8f4:	80 81       	ld	r24, Z
 8f6:	89 83       	std	Y+1, r24	; 0x01
 8f8:	0e 5f       	subi	r16, 0xFE	; 254
 8fa:	1f 4f       	sbci	r17, 0xFF	; 255
 8fc:	88 24       	eor	r8, r8
 8fe:	83 94       	inc	r8
 900:	91 2c       	mov	r9, r1
 902:	53 01       	movw	r10, r6
 904:	13 c0       	rjmp	.+38     	; 0x92c <__stack+0xcd>
 906:	28 01       	movw	r4, r16
 908:	f2 e0       	ldi	r31, 0x02	; 2
 90a:	4f 0e       	add	r4, r31
 90c:	51 1c       	adc	r5, r1
 90e:	f8 01       	movw	r30, r16
 910:	a0 80       	ld	r10, Z
 912:	b1 80       	ldd	r11, Z+1	; 0x01
 914:	36 fe       	sbrs	r3, 6
 916:	03 c0       	rjmp	.+6      	; 0x91e <__stack+0xbf>
 918:	69 2d       	mov	r22, r9
 91a:	70 e0       	ldi	r23, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0xc3>
 91e:	6f ef       	ldi	r22, 0xFF	; 255
 920:	7f ef       	ldi	r23, 0xFF	; 255
 922:	c5 01       	movw	r24, r10
 924:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <strnlen>
 928:	4c 01       	movw	r8, r24
 92a:	82 01       	movw	r16, r4
 92c:	f3 2d       	mov	r31, r3
 92e:	ff 77       	andi	r31, 0x7F	; 127
 930:	3f 2e       	mov	r3, r31
 932:	16 c0       	rjmp	.+44     	; 0x960 <__stack+0x101>
 934:	28 01       	movw	r4, r16
 936:	22 e0       	ldi	r18, 0x02	; 2
 938:	42 0e       	add	r4, r18
 93a:	51 1c       	adc	r5, r1
 93c:	f8 01       	movw	r30, r16
 93e:	a0 80       	ld	r10, Z
 940:	b1 80       	ldd	r11, Z+1	; 0x01
 942:	36 fe       	sbrs	r3, 6
 944:	03 c0       	rjmp	.+6      	; 0x94c <__stack+0xed>
 946:	69 2d       	mov	r22, r9
 948:	70 e0       	ldi	r23, 0x00	; 0
 94a:	02 c0       	rjmp	.+4      	; 0x950 <__stack+0xf1>
 94c:	6f ef       	ldi	r22, 0xFF	; 255
 94e:	7f ef       	ldi	r23, 0xFF	; 255
 950:	c5 01       	movw	r24, r10
 952:	0e 94 cd 05 	call	0xb9a	; 0xb9a <strnlen_P>
 956:	4c 01       	movw	r8, r24
 958:	f3 2d       	mov	r31, r3
 95a:	f0 68       	ori	r31, 0x80	; 128
 95c:	3f 2e       	mov	r3, r31
 95e:	82 01       	movw	r16, r4
 960:	33 fc       	sbrc	r3, 3
 962:	1b c0       	rjmp	.+54     	; 0x99a <__stack+0x13b>
 964:	82 2d       	mov	r24, r2
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	88 16       	cp	r8, r24
 96a:	99 06       	cpc	r9, r25
 96c:	b0 f4       	brcc	.+44     	; 0x99a <__stack+0x13b>
 96e:	b6 01       	movw	r22, r12
 970:	80 e2       	ldi	r24, 0x20	; 32
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 978:	2a 94       	dec	r2
 97a:	f4 cf       	rjmp	.-24     	; 0x964 <__stack+0x105>
 97c:	f5 01       	movw	r30, r10
 97e:	37 fc       	sbrc	r3, 7
 980:	85 91       	lpm	r24, Z+
 982:	37 fe       	sbrs	r3, 7
 984:	81 91       	ld	r24, Z+
 986:	5f 01       	movw	r10, r30
 988:	b6 01       	movw	r22, r12
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 990:	21 10       	cpse	r2, r1
 992:	2a 94       	dec	r2
 994:	21 e0       	ldi	r18, 0x01	; 1
 996:	82 1a       	sub	r8, r18
 998:	91 08       	sbc	r9, r1
 99a:	81 14       	cp	r8, r1
 99c:	91 04       	cpc	r9, r1
 99e:	71 f7       	brne	.-36     	; 0x97c <__stack+0x11d>
 9a0:	e8 c0       	rjmp	.+464    	; 0xb72 <__stack+0x313>
 9a2:	84 36       	cpi	r24, 0x64	; 100
 9a4:	11 f0       	breq	.+4      	; 0x9aa <__stack+0x14b>
 9a6:	89 36       	cpi	r24, 0x69	; 105
 9a8:	41 f5       	brne	.+80     	; 0x9fa <__stack+0x19b>
 9aa:	f8 01       	movw	r30, r16
 9ac:	37 fe       	sbrs	r3, 7
 9ae:	07 c0       	rjmp	.+14     	; 0x9be <__stack+0x15f>
 9b0:	60 81       	ld	r22, Z
 9b2:	71 81       	ldd	r23, Z+1	; 0x01
 9b4:	82 81       	ldd	r24, Z+2	; 0x02
 9b6:	93 81       	ldd	r25, Z+3	; 0x03
 9b8:	0c 5f       	subi	r16, 0xFC	; 252
 9ba:	1f 4f       	sbci	r17, 0xFF	; 255
 9bc:	08 c0       	rjmp	.+16     	; 0x9ce <__stack+0x16f>
 9be:	60 81       	ld	r22, Z
 9c0:	71 81       	ldd	r23, Z+1	; 0x01
 9c2:	07 2e       	mov	r0, r23
 9c4:	00 0c       	add	r0, r0
 9c6:	88 0b       	sbc	r24, r24
 9c8:	99 0b       	sbc	r25, r25
 9ca:	0e 5f       	subi	r16, 0xFE	; 254
 9cc:	1f 4f       	sbci	r17, 0xFF	; 255
 9ce:	f3 2d       	mov	r31, r3
 9d0:	ff 76       	andi	r31, 0x6F	; 111
 9d2:	3f 2e       	mov	r3, r31
 9d4:	97 ff       	sbrs	r25, 7
 9d6:	09 c0       	rjmp	.+18     	; 0x9ea <__stack+0x18b>
 9d8:	90 95       	com	r25
 9da:	80 95       	com	r24
 9dc:	70 95       	com	r23
 9de:	61 95       	neg	r22
 9e0:	7f 4f       	sbci	r23, 0xFF	; 255
 9e2:	8f 4f       	sbci	r24, 0xFF	; 255
 9e4:	9f 4f       	sbci	r25, 0xFF	; 255
 9e6:	f0 68       	ori	r31, 0x80	; 128
 9e8:	3f 2e       	mov	r3, r31
 9ea:	2a e0       	ldi	r18, 0x0A	; 10
 9ec:	30 e0       	ldi	r19, 0x00	; 0
 9ee:	a3 01       	movw	r20, r6
 9f0:	0e 94 1f 06 	call	0xc3e	; 0xc3e <__ultoa_invert>
 9f4:	88 2e       	mov	r8, r24
 9f6:	86 18       	sub	r8, r6
 9f8:	45 c0       	rjmp	.+138    	; 0xa84 <__stack+0x225>
 9fa:	85 37       	cpi	r24, 0x75	; 117
 9fc:	31 f4       	brne	.+12     	; 0xa0a <__stack+0x1ab>
 9fe:	23 2d       	mov	r18, r3
 a00:	2f 7e       	andi	r18, 0xEF	; 239
 a02:	b2 2e       	mov	r11, r18
 a04:	2a e0       	ldi	r18, 0x0A	; 10
 a06:	30 e0       	ldi	r19, 0x00	; 0
 a08:	25 c0       	rjmp	.+74     	; 0xa54 <__stack+0x1f5>
 a0a:	93 2d       	mov	r25, r3
 a0c:	99 7f       	andi	r25, 0xF9	; 249
 a0e:	b9 2e       	mov	r11, r25
 a10:	8f 36       	cpi	r24, 0x6F	; 111
 a12:	c1 f0       	breq	.+48     	; 0xa44 <__stack+0x1e5>
 a14:	18 f4       	brcc	.+6      	; 0xa1c <__stack+0x1bd>
 a16:	88 35       	cpi	r24, 0x58	; 88
 a18:	79 f0       	breq	.+30     	; 0xa38 <__stack+0x1d9>
 a1a:	b5 c0       	rjmp	.+362    	; 0xb86 <__stack+0x327>
 a1c:	80 37       	cpi	r24, 0x70	; 112
 a1e:	19 f0       	breq	.+6      	; 0xa26 <__stack+0x1c7>
 a20:	88 37       	cpi	r24, 0x78	; 120
 a22:	21 f0       	breq	.+8      	; 0xa2c <__stack+0x1cd>
 a24:	b0 c0       	rjmp	.+352    	; 0xb86 <__stack+0x327>
 a26:	e9 2f       	mov	r30, r25
 a28:	e0 61       	ori	r30, 0x10	; 16
 a2a:	be 2e       	mov	r11, r30
 a2c:	b4 fe       	sbrs	r11, 4
 a2e:	0d c0       	rjmp	.+26     	; 0xa4a <__stack+0x1eb>
 a30:	fb 2d       	mov	r31, r11
 a32:	f4 60       	ori	r31, 0x04	; 4
 a34:	bf 2e       	mov	r11, r31
 a36:	09 c0       	rjmp	.+18     	; 0xa4a <__stack+0x1eb>
 a38:	34 fe       	sbrs	r3, 4
 a3a:	0a c0       	rjmp	.+20     	; 0xa50 <__stack+0x1f1>
 a3c:	29 2f       	mov	r18, r25
 a3e:	26 60       	ori	r18, 0x06	; 6
 a40:	b2 2e       	mov	r11, r18
 a42:	06 c0       	rjmp	.+12     	; 0xa50 <__stack+0x1f1>
 a44:	28 e0       	ldi	r18, 0x08	; 8
 a46:	30 e0       	ldi	r19, 0x00	; 0
 a48:	05 c0       	rjmp	.+10     	; 0xa54 <__stack+0x1f5>
 a4a:	20 e1       	ldi	r18, 0x10	; 16
 a4c:	30 e0       	ldi	r19, 0x00	; 0
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <__stack+0x1f5>
 a50:	20 e1       	ldi	r18, 0x10	; 16
 a52:	32 e0       	ldi	r19, 0x02	; 2
 a54:	f8 01       	movw	r30, r16
 a56:	b7 fe       	sbrs	r11, 7
 a58:	07 c0       	rjmp	.+14     	; 0xa68 <__stack+0x209>
 a5a:	60 81       	ld	r22, Z
 a5c:	71 81       	ldd	r23, Z+1	; 0x01
 a5e:	82 81       	ldd	r24, Z+2	; 0x02
 a60:	93 81       	ldd	r25, Z+3	; 0x03
 a62:	0c 5f       	subi	r16, 0xFC	; 252
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	06 c0       	rjmp	.+12     	; 0xa74 <__stack+0x215>
 a68:	60 81       	ld	r22, Z
 a6a:	71 81       	ldd	r23, Z+1	; 0x01
 a6c:	80 e0       	ldi	r24, 0x00	; 0
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 5f       	subi	r16, 0xFE	; 254
 a72:	1f 4f       	sbci	r17, 0xFF	; 255
 a74:	a3 01       	movw	r20, r6
 a76:	0e 94 1f 06 	call	0xc3e	; 0xc3e <__ultoa_invert>
 a7a:	88 2e       	mov	r8, r24
 a7c:	86 18       	sub	r8, r6
 a7e:	fb 2d       	mov	r31, r11
 a80:	ff 77       	andi	r31, 0x7F	; 127
 a82:	3f 2e       	mov	r3, r31
 a84:	36 fe       	sbrs	r3, 6
 a86:	0d c0       	rjmp	.+26     	; 0xaa2 <__stack+0x243>
 a88:	23 2d       	mov	r18, r3
 a8a:	2e 7f       	andi	r18, 0xFE	; 254
 a8c:	a2 2e       	mov	r10, r18
 a8e:	89 14       	cp	r8, r9
 a90:	58 f4       	brcc	.+22     	; 0xaa8 <__stack+0x249>
 a92:	34 fe       	sbrs	r3, 4
 a94:	0b c0       	rjmp	.+22     	; 0xaac <__stack+0x24d>
 a96:	32 fc       	sbrc	r3, 2
 a98:	09 c0       	rjmp	.+18     	; 0xaac <__stack+0x24d>
 a9a:	83 2d       	mov	r24, r3
 a9c:	8e 7e       	andi	r24, 0xEE	; 238
 a9e:	a8 2e       	mov	r10, r24
 aa0:	05 c0       	rjmp	.+10     	; 0xaac <__stack+0x24d>
 aa2:	b8 2c       	mov	r11, r8
 aa4:	a3 2c       	mov	r10, r3
 aa6:	03 c0       	rjmp	.+6      	; 0xaae <__stack+0x24f>
 aa8:	b8 2c       	mov	r11, r8
 aaa:	01 c0       	rjmp	.+2      	; 0xaae <__stack+0x24f>
 aac:	b9 2c       	mov	r11, r9
 aae:	a4 fe       	sbrs	r10, 4
 ab0:	0f c0       	rjmp	.+30     	; 0xad0 <__stack+0x271>
 ab2:	fe 01       	movw	r30, r28
 ab4:	e8 0d       	add	r30, r8
 ab6:	f1 1d       	adc	r31, r1
 ab8:	80 81       	ld	r24, Z
 aba:	80 33       	cpi	r24, 0x30	; 48
 abc:	21 f4       	brne	.+8      	; 0xac6 <__stack+0x267>
 abe:	9a 2d       	mov	r25, r10
 ac0:	99 7e       	andi	r25, 0xE9	; 233
 ac2:	a9 2e       	mov	r10, r25
 ac4:	09 c0       	rjmp	.+18     	; 0xad8 <__stack+0x279>
 ac6:	a2 fe       	sbrs	r10, 2
 ac8:	06 c0       	rjmp	.+12     	; 0xad6 <__stack+0x277>
 aca:	b3 94       	inc	r11
 acc:	b3 94       	inc	r11
 ace:	04 c0       	rjmp	.+8      	; 0xad8 <__stack+0x279>
 ad0:	8a 2d       	mov	r24, r10
 ad2:	86 78       	andi	r24, 0x86	; 134
 ad4:	09 f0       	breq	.+2      	; 0xad8 <__stack+0x279>
 ad6:	b3 94       	inc	r11
 ad8:	a3 fc       	sbrc	r10, 3
 ada:	11 c0       	rjmp	.+34     	; 0xafe <__stack+0x29f>
 adc:	a0 fe       	sbrs	r10, 0
 ade:	06 c0       	rjmp	.+12     	; 0xaec <__stack+0x28d>
 ae0:	b2 14       	cp	r11, r2
 ae2:	88 f4       	brcc	.+34     	; 0xb06 <__stack+0x2a7>
 ae4:	28 0c       	add	r2, r8
 ae6:	92 2c       	mov	r9, r2
 ae8:	9b 18       	sub	r9, r11
 aea:	0e c0       	rjmp	.+28     	; 0xb08 <__stack+0x2a9>
 aec:	b2 14       	cp	r11, r2
 aee:	60 f4       	brcc	.+24     	; 0xb08 <__stack+0x2a9>
 af0:	b6 01       	movw	r22, r12
 af2:	80 e2       	ldi	r24, 0x20	; 32
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 afa:	b3 94       	inc	r11
 afc:	f7 cf       	rjmp	.-18     	; 0xaec <__stack+0x28d>
 afe:	b2 14       	cp	r11, r2
 b00:	18 f4       	brcc	.+6      	; 0xb08 <__stack+0x2a9>
 b02:	2b 18       	sub	r2, r11
 b04:	02 c0       	rjmp	.+4      	; 0xb0a <__stack+0x2ab>
 b06:	98 2c       	mov	r9, r8
 b08:	21 2c       	mov	r2, r1
 b0a:	a4 fe       	sbrs	r10, 4
 b0c:	10 c0       	rjmp	.+32     	; 0xb2e <__stack+0x2cf>
 b0e:	b6 01       	movw	r22, r12
 b10:	80 e3       	ldi	r24, 0x30	; 48
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 b18:	a2 fe       	sbrs	r10, 2
 b1a:	17 c0       	rjmp	.+46     	; 0xb4a <__stack+0x2eb>
 b1c:	a1 fc       	sbrc	r10, 1
 b1e:	03 c0       	rjmp	.+6      	; 0xb26 <__stack+0x2c7>
 b20:	88 e7       	ldi	r24, 0x78	; 120
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	02 c0       	rjmp	.+4      	; 0xb2a <__stack+0x2cb>
 b26:	88 e5       	ldi	r24, 0x58	; 88
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	b6 01       	movw	r22, r12
 b2c:	0c c0       	rjmp	.+24     	; 0xb46 <__stack+0x2e7>
 b2e:	8a 2d       	mov	r24, r10
 b30:	86 78       	andi	r24, 0x86	; 134
 b32:	59 f0       	breq	.+22     	; 0xb4a <__stack+0x2eb>
 b34:	a1 fe       	sbrs	r10, 1
 b36:	02 c0       	rjmp	.+4      	; 0xb3c <__stack+0x2dd>
 b38:	8b e2       	ldi	r24, 0x2B	; 43
 b3a:	01 c0       	rjmp	.+2      	; 0xb3e <__stack+0x2df>
 b3c:	80 e2       	ldi	r24, 0x20	; 32
 b3e:	a7 fc       	sbrc	r10, 7
 b40:	8d e2       	ldi	r24, 0x2D	; 45
 b42:	b6 01       	movw	r22, r12
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 b4a:	89 14       	cp	r8, r9
 b4c:	38 f4       	brcc	.+14     	; 0xb5c <__stack+0x2fd>
 b4e:	b6 01       	movw	r22, r12
 b50:	80 e3       	ldi	r24, 0x30	; 48
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 b58:	9a 94       	dec	r9
 b5a:	f7 cf       	rjmp	.-18     	; 0xb4a <__stack+0x2eb>
 b5c:	8a 94       	dec	r8
 b5e:	f3 01       	movw	r30, r6
 b60:	e8 0d       	add	r30, r8
 b62:	f1 1d       	adc	r31, r1
 b64:	80 81       	ld	r24, Z
 b66:	b6 01       	movw	r22, r12
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 b6e:	81 10       	cpse	r8, r1
 b70:	f5 cf       	rjmp	.-22     	; 0xb5c <__stack+0x2fd>
 b72:	22 20       	and	r2, r2
 b74:	09 f4       	brne	.+2      	; 0xb78 <__stack+0x319>
 b76:	42 ce       	rjmp	.-892    	; 0x7fc <vfprintf+0x24>
 b78:	b6 01       	movw	r22, r12
 b7a:	80 e2       	ldi	r24, 0x20	; 32
 b7c:	90 e0       	ldi	r25, 0x00	; 0
 b7e:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <fputc>
 b82:	2a 94       	dec	r2
 b84:	f6 cf       	rjmp	.-20     	; 0xb72 <__stack+0x313>
 b86:	f6 01       	movw	r30, r12
 b88:	86 81       	ldd	r24, Z+6	; 0x06
 b8a:	97 81       	ldd	r25, Z+7	; 0x07
 b8c:	02 c0       	rjmp	.+4      	; 0xb92 <__stack+0x333>
 b8e:	8f ef       	ldi	r24, 0xFF	; 255
 b90:	9f ef       	ldi	r25, 0xFF	; 255
 b92:	2b 96       	adiw	r28, 0x0b	; 11
 b94:	e2 e1       	ldi	r30, 0x12	; 18
 b96:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__epilogue_restores__>

00000b9a <strnlen_P>:
 b9a:	fc 01       	movw	r30, r24
 b9c:	05 90       	lpm	r0, Z+
 b9e:	61 50       	subi	r22, 0x01	; 1
 ba0:	70 40       	sbci	r23, 0x00	; 0
 ba2:	01 10       	cpse	r0, r1
 ba4:	d8 f7       	brcc	.-10     	; 0xb9c <strnlen_P+0x2>
 ba6:	80 95       	com	r24
 ba8:	90 95       	com	r25
 baa:	8e 0f       	add	r24, r30
 bac:	9f 1f       	adc	r25, r31
 bae:	08 95       	ret

00000bb0 <strnlen>:
 bb0:	fc 01       	movw	r30, r24
 bb2:	61 50       	subi	r22, 0x01	; 1
 bb4:	70 40       	sbci	r23, 0x00	; 0
 bb6:	01 90       	ld	r0, Z+
 bb8:	01 10       	cpse	r0, r1
 bba:	d8 f7       	brcc	.-10     	; 0xbb2 <strnlen+0x2>
 bbc:	80 95       	com	r24
 bbe:	90 95       	com	r25
 bc0:	8e 0f       	add	r24, r30
 bc2:	9f 1f       	adc	r25, r31
 bc4:	08 95       	ret

00000bc6 <fputc>:
 bc6:	0f 93       	push	r16
 bc8:	1f 93       	push	r17
 bca:	cf 93       	push	r28
 bcc:	df 93       	push	r29
 bce:	fb 01       	movw	r30, r22
 bd0:	23 81       	ldd	r18, Z+3	; 0x03
 bd2:	21 fd       	sbrc	r18, 1
 bd4:	03 c0       	rjmp	.+6      	; 0xbdc <fputc+0x16>
 bd6:	8f ef       	ldi	r24, 0xFF	; 255
 bd8:	9f ef       	ldi	r25, 0xFF	; 255
 bda:	2c c0       	rjmp	.+88     	; 0xc34 <fputc+0x6e>
 bdc:	22 ff       	sbrs	r18, 2
 bde:	16 c0       	rjmp	.+44     	; 0xc0c <fputc+0x46>
 be0:	46 81       	ldd	r20, Z+6	; 0x06
 be2:	57 81       	ldd	r21, Z+7	; 0x07
 be4:	24 81       	ldd	r18, Z+4	; 0x04
 be6:	35 81       	ldd	r19, Z+5	; 0x05
 be8:	42 17       	cp	r20, r18
 bea:	53 07       	cpc	r21, r19
 bec:	44 f4       	brge	.+16     	; 0xbfe <fputc+0x38>
 bee:	a0 81       	ld	r26, Z
 bf0:	b1 81       	ldd	r27, Z+1	; 0x01
 bf2:	9d 01       	movw	r18, r26
 bf4:	2f 5f       	subi	r18, 0xFF	; 255
 bf6:	3f 4f       	sbci	r19, 0xFF	; 255
 bf8:	31 83       	std	Z+1, r19	; 0x01
 bfa:	20 83       	st	Z, r18
 bfc:	8c 93       	st	X, r24
 bfe:	26 81       	ldd	r18, Z+6	; 0x06
 c00:	37 81       	ldd	r19, Z+7	; 0x07
 c02:	2f 5f       	subi	r18, 0xFF	; 255
 c04:	3f 4f       	sbci	r19, 0xFF	; 255
 c06:	37 83       	std	Z+7, r19	; 0x07
 c08:	26 83       	std	Z+6, r18	; 0x06
 c0a:	14 c0       	rjmp	.+40     	; 0xc34 <fputc+0x6e>
 c0c:	8b 01       	movw	r16, r22
 c0e:	ec 01       	movw	r28, r24
 c10:	fb 01       	movw	r30, r22
 c12:	00 84       	ldd	r0, Z+8	; 0x08
 c14:	f1 85       	ldd	r31, Z+9	; 0x09
 c16:	e0 2d       	mov	r30, r0
 c18:	09 95       	icall
 c1a:	89 2b       	or	r24, r25
 c1c:	e1 f6       	brne	.-72     	; 0xbd6 <fputc+0x10>
 c1e:	d8 01       	movw	r26, r16
 c20:	16 96       	adiw	r26, 0x06	; 6
 c22:	8d 91       	ld	r24, X+
 c24:	9c 91       	ld	r25, X
 c26:	17 97       	sbiw	r26, 0x07	; 7
 c28:	01 96       	adiw	r24, 0x01	; 1
 c2a:	17 96       	adiw	r26, 0x07	; 7
 c2c:	9c 93       	st	X, r25
 c2e:	8e 93       	st	-X, r24
 c30:	16 97       	sbiw	r26, 0x06	; 6
 c32:	ce 01       	movw	r24, r28
 c34:	df 91       	pop	r29
 c36:	cf 91       	pop	r28
 c38:	1f 91       	pop	r17
 c3a:	0f 91       	pop	r16
 c3c:	08 95       	ret

00000c3e <__ultoa_invert>:
 c3e:	fa 01       	movw	r30, r20
 c40:	aa 27       	eor	r26, r26
 c42:	28 30       	cpi	r18, 0x08	; 8
 c44:	51 f1       	breq	.+84     	; 0xc9a <__ultoa_invert+0x5c>
 c46:	20 31       	cpi	r18, 0x10	; 16
 c48:	81 f1       	breq	.+96     	; 0xcaa <__ultoa_invert+0x6c>
 c4a:	e8 94       	clt
 c4c:	6f 93       	push	r22
 c4e:	6e 7f       	andi	r22, 0xFE	; 254
 c50:	6e 5f       	subi	r22, 0xFE	; 254
 c52:	7f 4f       	sbci	r23, 0xFF	; 255
 c54:	8f 4f       	sbci	r24, 0xFF	; 255
 c56:	9f 4f       	sbci	r25, 0xFF	; 255
 c58:	af 4f       	sbci	r26, 0xFF	; 255
 c5a:	b1 e0       	ldi	r27, 0x01	; 1
 c5c:	3e d0       	rcall	.+124    	; 0xcda <__ultoa_invert+0x9c>
 c5e:	b4 e0       	ldi	r27, 0x04	; 4
 c60:	3c d0       	rcall	.+120    	; 0xcda <__ultoa_invert+0x9c>
 c62:	67 0f       	add	r22, r23
 c64:	78 1f       	adc	r23, r24
 c66:	89 1f       	adc	r24, r25
 c68:	9a 1f       	adc	r25, r26
 c6a:	a1 1d       	adc	r26, r1
 c6c:	68 0f       	add	r22, r24
 c6e:	79 1f       	adc	r23, r25
 c70:	8a 1f       	adc	r24, r26
 c72:	91 1d       	adc	r25, r1
 c74:	a1 1d       	adc	r26, r1
 c76:	6a 0f       	add	r22, r26
 c78:	71 1d       	adc	r23, r1
 c7a:	81 1d       	adc	r24, r1
 c7c:	91 1d       	adc	r25, r1
 c7e:	a1 1d       	adc	r26, r1
 c80:	20 d0       	rcall	.+64     	; 0xcc2 <__ultoa_invert+0x84>
 c82:	09 f4       	brne	.+2      	; 0xc86 <__ultoa_invert+0x48>
 c84:	68 94       	set
 c86:	3f 91       	pop	r19
 c88:	2a e0       	ldi	r18, 0x0A	; 10
 c8a:	26 9f       	mul	r18, r22
 c8c:	11 24       	eor	r1, r1
 c8e:	30 19       	sub	r19, r0
 c90:	30 5d       	subi	r19, 0xD0	; 208
 c92:	31 93       	st	Z+, r19
 c94:	de f6       	brtc	.-74     	; 0xc4c <__ultoa_invert+0xe>
 c96:	cf 01       	movw	r24, r30
 c98:	08 95       	ret
 c9a:	46 2f       	mov	r20, r22
 c9c:	47 70       	andi	r20, 0x07	; 7
 c9e:	40 5d       	subi	r20, 0xD0	; 208
 ca0:	41 93       	st	Z+, r20
 ca2:	b3 e0       	ldi	r27, 0x03	; 3
 ca4:	0f d0       	rcall	.+30     	; 0xcc4 <__ultoa_invert+0x86>
 ca6:	c9 f7       	brne	.-14     	; 0xc9a <__ultoa_invert+0x5c>
 ca8:	f6 cf       	rjmp	.-20     	; 0xc96 <__ultoa_invert+0x58>
 caa:	46 2f       	mov	r20, r22
 cac:	4f 70       	andi	r20, 0x0F	; 15
 cae:	40 5d       	subi	r20, 0xD0	; 208
 cb0:	4a 33       	cpi	r20, 0x3A	; 58
 cb2:	18 f0       	brcs	.+6      	; 0xcba <__ultoa_invert+0x7c>
 cb4:	49 5d       	subi	r20, 0xD9	; 217
 cb6:	31 fd       	sbrc	r19, 1
 cb8:	40 52       	subi	r20, 0x20	; 32
 cba:	41 93       	st	Z+, r20
 cbc:	02 d0       	rcall	.+4      	; 0xcc2 <__ultoa_invert+0x84>
 cbe:	a9 f7       	brne	.-22     	; 0xcaa <__ultoa_invert+0x6c>
 cc0:	ea cf       	rjmp	.-44     	; 0xc96 <__ultoa_invert+0x58>
 cc2:	b4 e0       	ldi	r27, 0x04	; 4
 cc4:	a6 95       	lsr	r26
 cc6:	97 95       	ror	r25
 cc8:	87 95       	ror	r24
 cca:	77 95       	ror	r23
 ccc:	67 95       	ror	r22
 cce:	ba 95       	dec	r27
 cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__ultoa_invert+0x86>
 cd2:	00 97       	sbiw	r24, 0x00	; 0
 cd4:	61 05       	cpc	r22, r1
 cd6:	71 05       	cpc	r23, r1
 cd8:	08 95       	ret
 cda:	9b 01       	movw	r18, r22
 cdc:	ac 01       	movw	r20, r24
 cde:	0a 2e       	mov	r0, r26
 ce0:	06 94       	lsr	r0
 ce2:	57 95       	ror	r21
 ce4:	47 95       	ror	r20
 ce6:	37 95       	ror	r19
 ce8:	27 95       	ror	r18
 cea:	ba 95       	dec	r27
 cec:	c9 f7       	brne	.-14     	; 0xce0 <__ultoa_invert+0xa2>
 cee:	62 0f       	add	r22, r18
 cf0:	73 1f       	adc	r23, r19
 cf2:	84 1f       	adc	r24, r20
 cf4:	95 1f       	adc	r25, r21
 cf6:	a0 1d       	adc	r26, r0
 cf8:	08 95       	ret

00000cfa <__prologue_saves__>:
 cfa:	2f 92       	push	r2
 cfc:	3f 92       	push	r3
 cfe:	4f 92       	push	r4
 d00:	5f 92       	push	r5
 d02:	6f 92       	push	r6
 d04:	7f 92       	push	r7
 d06:	8f 92       	push	r8
 d08:	9f 92       	push	r9
 d0a:	af 92       	push	r10
 d0c:	bf 92       	push	r11
 d0e:	cf 92       	push	r12
 d10:	df 92       	push	r13
 d12:	ef 92       	push	r14
 d14:	ff 92       	push	r15
 d16:	0f 93       	push	r16
 d18:	1f 93       	push	r17
 d1a:	cf 93       	push	r28
 d1c:	df 93       	push	r29
 d1e:	cd b7       	in	r28, 0x3d	; 61
 d20:	de b7       	in	r29, 0x3e	; 62
 d22:	ca 1b       	sub	r28, r26
 d24:	db 0b       	sbc	r29, r27
 d26:	0f b6       	in	r0, 0x3f	; 63
 d28:	f8 94       	cli
 d2a:	de bf       	out	0x3e, r29	; 62
 d2c:	0f be       	out	0x3f, r0	; 63
 d2e:	cd bf       	out	0x3d, r28	; 61
 d30:	09 94       	ijmp

00000d32 <__epilogue_restores__>:
 d32:	2a 88       	ldd	r2, Y+18	; 0x12
 d34:	39 88       	ldd	r3, Y+17	; 0x11
 d36:	48 88       	ldd	r4, Y+16	; 0x10
 d38:	5f 84       	ldd	r5, Y+15	; 0x0f
 d3a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d3c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d3e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d40:	9b 84       	ldd	r9, Y+11	; 0x0b
 d42:	aa 84       	ldd	r10, Y+10	; 0x0a
 d44:	b9 84       	ldd	r11, Y+9	; 0x09
 d46:	c8 84       	ldd	r12, Y+8	; 0x08
 d48:	df 80       	ldd	r13, Y+7	; 0x07
 d4a:	ee 80       	ldd	r14, Y+6	; 0x06
 d4c:	fd 80       	ldd	r15, Y+5	; 0x05
 d4e:	0c 81       	ldd	r16, Y+4	; 0x04
 d50:	1b 81       	ldd	r17, Y+3	; 0x03
 d52:	aa 81       	ldd	r26, Y+2	; 0x02
 d54:	b9 81       	ldd	r27, Y+1	; 0x01
 d56:	ce 0f       	add	r28, r30
 d58:	d1 1d       	adc	r29, r1
 d5a:	0f b6       	in	r0, 0x3f	; 63
 d5c:	f8 94       	cli
 d5e:	de bf       	out	0x3e, r29	; 62
 d60:	0f be       	out	0x3f, r0	; 63
 d62:	cd bf       	out	0x3d, r28	; 61
 d64:	ed 01       	movw	r28, r26
 d66:	08 95       	ret

00000d68 <_exit>:
 d68:	f8 94       	cli

00000d6a <__stop_program>:
 d6a:	ff cf       	rjmp	.-2      	; 0xd6a <__stop_program>
